{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "glog-a7022940-c50b-49be-bd3d-efeb811baf68",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-b11c74ea-5fa8-4a64-bfcc-f49b5602cf10",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-3a609e11-62ce-4f29-9d07-cb05cd29465f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-b934f895-20ff-4a68-9749-6d32ac3c0895",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-241cd6d9-faa3-4273-be44-6972602a2ffe",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-20b7fc01-df81-4007-a60d-8b2f07daf703",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-0075cf8c-4f74-4b50-8a73-79a6e3b3a61c",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-77717a5b-c623-406f-8392-d2976c2aba6d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-04ad727b-716d-49ee-9349-5850f76872e6",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-bb812e23-d0bf-4a6b-8568-e2ff98f77ac3",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-bf3aeceb-e4fa-465f-ae2d-8545860f44b8",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-054d7f46-1b53-4c61-90c8-b41510620c25",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-50875ce7-1d02-4eae-ba20-e97e1e470059",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-d5743ec0-e0b0-4683-b3c0-13ad1271ec13",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-0c241673-0fe3-4bad-91f9-5d60d973a349",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-08764213-883b-4ac0-994c-741c422cf730",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-3c4cb02b-8f5d-45e7-84e3-5bb52baa28f9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-d0bdca18-49df-46ad-b7a8-03d44e3ec0e5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-bc82a59c-69c1-44c7-9014-99409e2261a5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-abfc5b6b-1bf1-4ae8-959d-5ac748cb0489",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5ee6fad6-9937-4c27-a129-9010caaf2d5e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-8d67b462-dc20-4425-94ae-527c1d99d058",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-3fffab42-0c18-4b10-bfe8-66461833d971",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-cd22738a-3183-47c0-a88b-cc2a6d4fe665",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-42647273-a1cf-4cb4-a95d-f7b71da751d4",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-54d506ce-8004-4728-88a6-f6ed6ef2e4d2",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-a3699d8e-6087-49f3-9ad0-ba91cd116344",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-ac88c9dc-a51d-4060-9a0e-710f6414a74f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-287d7fbf-24b2-4121-a8ae-1e37e6b4c1af",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-a98affbc-1207-4f8f-9e2c-bd580eaf8881",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-0d03a2b1-b8f6-4f9a-8608-ee7a85d85330",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-43fed010-55e0-4567-8829-b084df7c5c75",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-2908d5f0-29ea-4565-9451-48ca32ecc471",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-fd73f4fe-fa06-45d9-8adb-b4226157063a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-ad66b20c-8307-4fc8-9e31-b3f117bbb681",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-e375036b-91cf-40e5-9ded-1e1bab363c50",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-161a67c6-684e-474a-8cf7-98ea04bdff75",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-fab01a69-3800-42b7-a61d-98f25ec415d9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-85706000-ae88-4c96-900b-8a9a0901eb70",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-de1793b0-d37e-4249-90e8-2eff998a4ea6",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-c30a9116-e166-46e6-95a6-d0bf4360bb21",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-0c1ee171-1b73-492d-9cbb-5e27e0327346",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-a53bc8ae-1efd-4e68-bb1e-d509a74af064",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-353377e7-ae29-436d-8314-2ffd9f78f142",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-4527601a-a54b-4ba2-8e36-146e946e84dd",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-9a2dc66f-5e7a-429a-8f03-5f5f952a6c4f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-33b0b54a-ded0-4964-8ac3-d59e3fc5212b",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-36da1f37-6118-4026-9d06-ce5abd3c9da3",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-8e5cf254-cb2d-4d70-a71b-93968b49ddaa",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-e243f51b-50bb-4a37-9663-c493ba01a50d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-f67bc4e4-390c-444a-9520-28134f699564",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5c4c0869-8f8c-4368-aec7-2c2efb98460d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-643b48d5-3b1e-4a08-86ba-d52f532000ab",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-7ae57fdd-4d3b-4835-a59b-d5bb9a055da1",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-c8482c5b-dc5e-4810-9381-9fd2a8420678",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-41c22b83-88f9-44c7-bc39-e301e4761091",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-2f495cb5-4028-4c4c-a209-3d168e80f91a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-f832d191-ca24-48d9-aa1a-464133401dec",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-37b368f5-7403-4703-8b67-ee3ebd13d513",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-c5938e41-edf2-4495-ad8d-b33b2d955050",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-e0a88730-b1c9-4083-9f38-e6b59cf351ea",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-49061cf5-7be4-4e6f-a336-80fa3140e2e7",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-45f532ac-46d4-489b-8723-d55ab8a7abad",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-fd089eb3-4089-43a9-a369-9a642ef8a92e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-112ce4fb-ba76-4314-8faa-0ec73227b22c",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-0db6b589-f681-4099-80bc-e9c245fb1cd7",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-8f771668-75e8-4af6-ad93-ce72e5c4d0ab",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-82f45b1b-e514-4714-8a1f-012a7df5902b",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-e44b91ea-38a5-4522-84ac-11dc00c53341",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-b20737a6-13ed-4dd1-b8fe-1767b5520e89",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-f711b210-32c8-4778-9f9e-3cfd39d1042f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-2dd4c237-2c92-4c54-a96b-91127554f878",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-ac477920-c41f-4be2-865f-60f55d9473f3",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-b387d580-d303-4002-bedf-a8852fb8636a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-bdfe4466-0b95-4e00-b34a-f9247ae95d82",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-1e6acb02-2441-41ac-9e73-3b94d821e5f5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-c5cc7084-4d2b-4e13-b14a-87e4a66feb8b",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5f6b9f03-793a-4aa6-92f9-8165e30e9104",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5451b995-2529-4510-beb0-ac8a99f2522b",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-16b621bf-3593-48e6-b61c-397bade9ba32",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-80e06383-970f-4bd7-b14a-b38b1fce9e99",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-21c08bf2-aaa4-4590-a3a2-49d3fe617aeb",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-207eadb5-a4a6-42da-8a89-dad242708053",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-98cfd804-cbc5-452c-a745-2139dd40b031",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-de987b4a-9fed-4ad9-92e4-78c3cabbcc4e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-30b53678-7bab-4f43-ad3c-92ee229028aa",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-3d1bf0c2-bcb5-4d26-846e-06bc6a23a843",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-89de68d6-1fbc-487e-85da-cb30f51bcf9f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-1272be84-4ac8-4be0-b159-ac87b13ed7ae",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-72b96c96-5b52-410e-849c-c842fcf946ad",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-6ad5b521-dac4-4767-ad25-e918d1b98f6e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-89de820b-a440-49f2-a4b2-faefe717bb50",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-059fd2e1-ca62-40cf-91e2-6317e736f8bc",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-f35541ea-70db-4d41-b233-e4a592eddac1",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-a49d6bc5-bb72-48c9-939e-c63d81a20d8e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-14e208b9-9491-49a3-b0c9-ad17567a65e0",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-ff635dec-22df-47c7-b66e-bd9d6173cb38",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-c562641c-f883-4f57-9886-0c16369d5397",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-b3aca4c4-c2ba-4da5-b23d-6f1e8aa221e9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-3cb42579-c7e6-440e-920c-03bd6acec7ac",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS162092"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "glog-b11c74ea-5fa8-4a64-bfcc-f49b5602cf10",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 2169,
                  "startColumn": 55,
                  "endLine": 2169,
                  "endColumn": 72,
                  "charOffset": 58186,
                  "charLength": 17,
                  "snippet": {
                    "text": "strlen(str_value)",
                    "rendered": {
                      "text": "strlen(str_value)",
                      "markdown": "`strlen(str_value)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58186,
                        "charLength": 17
                      },
                      "insertedContent": {
                        "text": "strlen_s(str_value, <size of str_value>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58186,
                        "charLength": 17
                      },
                      "insertedContent": {
                        "text": "strnlen(str_value, <size of str_value>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a53f61e7-2e92-4d31-b534-5a67b5c0d34b",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 4,
                  "endLine": 481,
                  "endColumn": 46,
                  "charOffset": 14886,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"6061626364656667686970717273747576777879\"",
                    "rendered": {
                      "text": "\"6061626364656667686970717273747576777879\"",
                      "markdown": "`\"6061626364656667686970717273747576777879\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-3a609e11-62ce-4f29-9d07-cb05cd29465f",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 4,
                  "endLine": 480,
                  "endColumn": 46,
                  "charOffset": 14839,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"4041424344454647484950515253545556575859\"",
                    "rendered": {
                      "text": "\"4041424344454647484950515253545556575859\"",
                      "markdown": "`\"4041424344454647484950515253545556575859\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-b934f895-20ff-4a68-9749-6d32ac3c0895",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 4,
                  "endLine": 478,
                  "endColumn": 46,
                  "charOffset": 14745,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"0001020304050607080910111213141516171819\"",
                    "rendered": {
                      "text": "\"0001020304050607080910111213141516171819\"",
                      "markdown": "`\"0001020304050607080910111213141516171819\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-241cd6d9-faa3-4273-be44-6972602a2ffe",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 4,
                  "endLine": 479,
                  "endColumn": 46,
                  "charOffset": 14792,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"2021222324252627282930313233343536373839\"",
                    "rendered": {
                      "text": "\"2021222324252627282930313233343536373839\"",
                      "markdown": "`\"2021222324252627282930313233343536373839\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-20b7fc01-df81-4007-a60d-8b2f07daf703",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 28,
                  "endLine": 179,
                  "endColumn": 43,
                  "charOffset": 5644,
                  "charLength": 15,
                  "snippet": {
                    "text": "strlen(buffer_)",
                    "rendered": {
                      "text": "strlen(buffer_)",
                      "markdown": "`strlen(buffer_)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5644,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strlen_s(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5644,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strnlen(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-0075cf8c-4f74-4b50-8a73-79a6e3b3a61c",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 32,
                  "endLine": 165,
                  "endColumn": 47,
                  "charOffset": 5172,
                  "charLength": 15,
                  "snippet": {
                    "text": "strlen(buffer_)",
                    "rendered": {
                      "text": "strlen(buffer_)",
                      "markdown": "`strlen(buffer_)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5172,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strlen_s(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5172,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strnlen(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-77717a5b-c623-406f-8392-d2976c2aba6d",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/stacktrace.h"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 28,
                  "endLine": 35,
                  "endColumn": 48,
                  "charOffset": 1065,
                  "charLength": 20,
                  "snippet": {
                    "text": "malloc(funcnamesize)",
                    "rendered": {
                      "text": "malloc(funcnamesize)",
                      "markdown": "`malloc(funcnamesize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/stacktrace.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 1065,
                        "charLength": 20
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-04ad727b-716d-49ee-9349-5850f76872e6",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/logger_impl.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/logger_impl.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-bb812e23-d0bf-4a6b-8568-e2ff98f77ac3",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/pattern_formatter_impl.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/pattern_formatter_impl.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-bf3aeceb-e4fa-465f-ae2d-8545860f44b8",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/file_helper.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/file_helper.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-054d7f46-1b53-4c61-90c8-b41510620c25",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/os.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/os.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-50875ce7-1d02-4eae-ba20-e97e1e470059",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 912,
                  "startColumn": 12,
                  "endLine": 913,
                  "endColumn": 44,
                  "charOffset": 37022,
                  "charLength": 92,
                  "snippet": {
                    "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                    "rendered": {
                      "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                      "markdown": "`strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 37022,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->peer_device[cnt].peer_device.name, <size of info->peer_device[cnt].peer_device.name>, \n                   (name + std::to_string(i)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 37022,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->peer_device[cnt].peer_device.name, \n                   (name + std::to_string(i, <size of info->peer_device[cnt].peer_device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-d5743ec0-e0b0-4683-b3c0-13ad1271ec13",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/sinks/file_sinks.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/sinks/file_sinks.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-0c241673-0fe3-4bad-91f9-5d60d973a349",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 8,
                  "endLine": 456,
                  "endColumn": 64,
                  "charOffset": 17718,
                  "charLength": 56,
                  "snippet": {
                    "text": "strncpy(status->vbios_part_number, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_part_number, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_part_number, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 17718,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_part_number,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 17718,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_part_number,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-08764213-883b-4ac0-994c-741c422cf730",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 39,
                  "endLine": 259,
                  "endColumn": 73,
                  "charOffset": 9172,
                  "charLength": 34,
                  "snippet": {
                    "text": "malloc(sizeof(rsmi_process_info_t)",
                    "rendered": {
                      "text": "malloc(sizeof(rsmi_process_info_t)",
                      "markdown": "`malloc(sizeof(rsmi_process_info_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 9172,
                        "charLength": 34
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-3c4cb02b-8f5d-45e7-84e3-5bb52baa28f9",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 4,
                  "endLine": 235,
                  "endColumn": 40,
                  "charOffset": 8269,
                  "charLength": 36,
                  "snippet": {
                    "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(sku, token, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8269,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strcpy_s(sku,  AGA_MAX_STR_LEN,  token)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8269,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strlcpy(sku,  token,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-d0bdca18-49df-46ad-b7a8-03d44e3ec0e5",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 8,
                  "endLine": 206,
                  "endColumn": 32,
                  "charOffset": 7373,
                  "charLength": 94,
                  "snippet": {
                    "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7373,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version, \n                AGA_MAX_STR_LEN,  std::to_string(version).c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7373,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  std::to_string(version).c_str(), \n                AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-bc82a59c-69c1-44c7-9014-99409e2261a5",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 8,
                  "endLine": 203,
                  "endColumn": 58,
                  "charOffset": 7300,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7300,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7300,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-abfc5b6b-1bf1-4ae8-959d-5ac748cb0489",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 8,
                  "endLine": 190,
                  "endColumn": 58,
                  "charOffset": 6645,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6645,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6645,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5ee6fad6-9937-4c27-a129-9010caaf2d5e",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 4,
                  "endLine": 182,
                  "endColumn": 28,
                  "charOffset": 6114,
                  "charLength": 89,
                  "snippet": {
                    "text": "strncpy(fw_version->firmware, gpu_fw_block_name_str_(block),\n            AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->firmware, gpu_fw_block_name_str_(block),\n            AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->firmware, gpu_fw_block_name_str_(block),\n            AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6114,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->firmware, \n            AGA_MAX_STR_LEN,  gpu_fw_block_name_str_(block))"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6114,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->firmware,  gpu_fw_block_name_str_(block), \n            AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-8d67b462-dc20-4425-94ae-527c1d99d058",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 4779,
                  "startColumn": 10,
                  "endLine": 4779,
                  "endColumn": 32,
                  "charOffset": 134170,
                  "charLength": 22,
                  "snippet": {
                    "text": "strcpy (path, w->path)",
                    "rendered": {
                      "text": "strcpy (path, w->path)",
                      "markdown": "`strcpy (path, w->path)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134170,
                        "charLength": 22
                      },
                      "insertedContent": {
                        "text": "strcpy_s(path, <size of path>,  w->path)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134170,
                        "charLength": 22
                      },
                      "insertedContent": {
                        "text": "strlcpy(path,  w->path, <size of path>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-3fffab42-0c18-4b10-bfe8-66461833d971",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 4776,
                  "startColumn": 50,
                  "endLine": 4776,
                  "endColumn": 66,
                  "charOffset": 134097,
                  "charLength": 16,
                  "snippet": {
                    "text": "strlen (w->path)",
                    "rendered": {
                      "text": "strlen (w->path)",
                      "markdown": "`strlen (w->path)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134097,
                        "charLength": 16
                      },
                      "insertedContent": {
                        "text": "strlen_s(w->path, <size of w->path>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134097,
                        "charLength": 16
                      },
                      "insertedContent": {
                        "text": "strnlen(w->path, <size of w->path>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-cd22738a-3183-47c0-a88b-cc2a6d4fe665",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1988,
                  "startColumn": 29,
                  "endLine": 1988,
                  "endColumn": 41,
                  "charOffset": 67130,
                  "charLength": 12,
                  "snippet": {
                    "text": "strlen (msg)",
                    "rendered": {
                      "text": "strlen (msg)",
                      "markdown": "`strlen (msg)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 67130,
                        "charLength": 12
                      },
                      "insertedContent": {
                        "text": "strlen_s(msg, <size of msg>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 67130,
                        "charLength": 12
                      },
                      "insertedContent": {
                        "text": "strnlen(msg, <size of msg>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-42647273-a1cf-4cb4-a95d-f7b71da751d4",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1709,
                  "startColumn": 6,
                  "endLine": 1709,
                  "endColumn": 24,
                  "charOffset": 58214,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 8)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 8)",
                      "markdown": "`memcpy (&r, &x, 8)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58214,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  8)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-54d506ce-8004-4728-88a6-f6ed6ef2e4d2",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 6,
                  "endLine": 1669,
                  "endColumn": 24,
                  "charOffset": 57240,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 8)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 8)",
                      "markdown": "`memcpy (&r, &x, 8)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 57240,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  8)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a3699d8e-6087-49f3-9ad0-ba91cd116344",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6,
                  "endLine": 1639,
                  "endColumn": 24,
                  "charOffset": 56565,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 4)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 4)",
                      "markdown": "`memcpy (&r, &x, 4)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 56565,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  4)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ac88c9dc-a51d-4060-9a0e-710f6414a74f",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1599,
                  "startColumn": 6,
                  "endLine": 1599,
                  "endColumn": 24,
                  "charOffset": 55670,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 4)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 4)",
                      "markdown": "`memcpy (&r, &x, 4)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55670,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  4)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-287d7fbf-24b2-4121-a8ae-1e37e6b4c1af",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1402,
                  "startColumn": 66,
                  "endLine": 1402,
                  "endColumn": 93,
                  "charOffset": 49733,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 49733,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a98affbc-1207-4f8f-9e2c-bd580eaf8881",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1393,
                  "startColumn": 70,
                  "endLine": 1393,
                  "endColumn": 97,
                  "charOffset": 48877,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 48877,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-0d03a2b1-b8f6-4f9a-8608-ee7a85d85330",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1371,
                  "startColumn": 57,
                  "endLine": 1371,
                  "endColumn": 84,
                  "charOffset": 47207,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 47207,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-43fed010-55e0-4567-8829-b084df7c5c75",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1370,
                  "startColumn": 57,
                  "endLine": 1370,
                  "endColumn": 84,
                  "charOffset": 47118,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 47118,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-2908d5f0-29ea-4565-9451-48ca32ecc471",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 57,
                  "endLine": 1369,
                  "endColumn": 84,
                  "charOffset": 47029,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 47029,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-fd73f4fe-fa06-45d9-8adb-b4226157063a",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1351,
                  "startColumn": 72,
                  "endLine": 1351,
                  "endColumn": 99,
                  "charOffset": 45533,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 45533,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ad66b20c-8307-4fc8-9e31-b3f117bbb681",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1350,
                  "startColumn": 72,
                  "endLine": 1350,
                  "endColumn": 99,
                  "charOffset": 45419,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 45419,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e375036b-91cf-40e5-9ded-1e1bab363c50",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 72,
                  "endLine": 1349,
                  "endColumn": 99,
                  "charOffset": 45305,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 45305,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-161a67c6-684e-474a-8cf7-98ea04bdff75",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 12,
                  "endLine": 223,
                  "endColumn": 75,
                  "charOffset": 8716,
                  "charLength": 63,
                  "snippet": {
                    "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8716,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  AGA_MAX_EVENT_STR,  event_record.message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8716,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_record.message,  AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-fab01a69-3800-42b7-a61d-98f25ec415d9",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 12,
                  "endLine": 356,
                  "endColumn": 52,
                  "charOffset": 14013,
                  "charLength": 147,
                  "snippet": {
                    "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14013,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_data[num_elem].message, \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE, \n                    event_description_(args->events[e]))"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14013,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_data[num_elem].message, \n                    event_description_(args->events[e]), \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-85706000-ae88-4c96-900b-8a9a0901eb70",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 8,
                  "endLine": 180,
                  "endColumn": 34,
                  "charOffset": 6823,
                  "charLength": 82,
                  "snippet": {
                    "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6823,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6823,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-de1793b0-d37e-4249-90e8-2eff998a4ea6",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 8,
                  "endLine": 173,
                  "endColumn": 34,
                  "charOffset": 6525,
                  "charLength": 89,
                  "snippet": {
                    "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6525,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_record.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6525,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_record.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c30a9116-e166-46e6-95a6-d0bf4360bb21",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 1505,
                  "startColumn": 8,
                  "endLine": 1506,
                  "endColumn": 48,
                  "charOffset": 62561,
                  "charLength": 109,
                  "snippet": {
                    "text": "strcpy(info->peer_device[walk_ctxt->count].peer_device.name,\n               (name + std::to_string(gpu1->id()",
                    "rendered": {
                      "text": "strcpy(info->peer_device[walk_ctxt->count].peer_device.name,\n               (name + std::to_string(gpu1->id()",
                      "markdown": "`strcpy(info->peer_device[walk_ctxt->count].peer_device.name,\n               (name + std::to_string(gpu1->id()`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62561,
                        "charLength": 109
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->peer_device[walk_ctxt->count].peer_device.name, <size of info->peer_device[walk_ctxt->count].peer_device.name>, \n               (name + std::to_string(gpu1->id()"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62561,
                        "charLength": 109
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->peer_device[walk_ctxt->count].peer_device.name, \n               (name + std::to_string(gpu1->id(, <size of info->peer_device[walk_ctxt->count].peer_device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-0c1ee171-1b73-492d-9cbb-5e27e0327346",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 793,
                  "startColumn": 8,
                  "endLine": 794,
                  "endColumn": 32,
                  "charOffset": 31177,
                  "charLength": 91,
                  "snippet": {
                    "text": "strncpy(status->vbios_part_number, vbios_info.part_number,\n                AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_part_number, vbios_info.part_number,\n                AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_part_number, vbios_info.part_number,\n                AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31177,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_part_number, \n                AGA_MAX_STR_LEN,  vbios_info.part_number)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31177,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_part_number,  vbios_info.part_number, \n                AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a53bc8ae-1efd-4e68-bb1e-d509a74af064",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 40,
                  "endLine": 915,
                  "endColumn": 64,
                  "charOffset": 36471,
                  "charLength": 72,
                  "snippet": {
                    "text": "malloc(\n            num_bad_pages * sizeof(amdsmi_retired_page_record_t)",
                    "rendered": {
                      "text": "malloc(\n            num_bad_pages * sizeof(amdsmi_retired_page_record_t)",
                      "markdown": "`malloc(\n            num_bad_pages * sizeof(amdsmi_retired_page_record_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 36471,
                        "charLength": 72
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-353377e7-ae29-436d-8314-2ffd9f78f142",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 792,
                  "startColumn": 8,
                  "endLine": 792,
                  "endColumn": 75,
                  "charOffset": 31100,
                  "charLength": 67,
                  "snippet": {
                    "text": "strncpy(status->vbios_version, vbios_info.version, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_version, vbios_info.version, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_version, vbios_info.version, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31100,
                        "charLength": 67
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_version,  AGA_MAX_STR_LEN,  vbios_info.version)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31100,
                        "charLength": 67
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_version,  vbios_info.version,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-4527601a-a54b-4ba2-8e36-146e946e84dd",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 784,
                  "startColumn": 4,
                  "endLine": 784,
                  "endColumn": 79,
                  "charOffset": 30726,
                  "charLength": 75,
                  "snippet": {
                    "text": "memcpy(status->driver_version, driver_info.driver_version, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->driver_version, driver_info.driver_version, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->driver_version, driver_info.driver_version, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30726,
                        "charLength": 75
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->driver_version, <size of status->driver_version>,  driver_info.driver_version,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-9a2dc66f-5e7a-429a-8f03-5f5f952a6c4f",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 4,
                  "endLine": 777,
                  "endColumn": 72,
                  "charOffset": 30359,
                  "charLength": 68,
                  "snippet": {
                    "text": "memcpy(status->card_model, board_info.model_number, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->card_model, board_info.model_number, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->card_model, board_info.model_number, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30359,
                        "charLength": 68
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->card_model, <size of status->card_model>,  board_info.model_number,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-33b0b54a-ded0-4964-8ac3-d59e3fc5212b",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 4,
                  "endLine": 775,
                  "endColumn": 78,
                  "charOffset": 30248,
                  "charLength": 74,
                  "snippet": {
                    "text": "memcpy(status->card_vendor, board_info.manufacturer_name, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->card_vendor, board_info.manufacturer_name, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->card_vendor, board_info.manufacturer_name, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30248,
                        "charLength": 74
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->card_vendor, <size of status->card_vendor>,  board_info.manufacturer_name,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-36da1f37-6118-4026-9d06-ce5abd3c9da3",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 773,
                  "startColumn": 4,
                  "endLine": 773,
                  "endColumn": 73,
                  "charOffset": 30134,
                  "charLength": 69,
                  "snippet": {
                    "text": "memcpy(status->card_series, board_info.product_name, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->card_series, board_info.product_name, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->card_series, board_info.product_name, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30134,
                        "charLength": 69
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->card_series, <size of status->card_series>,  board_info.product_name,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-8e5cf254-cb2d-4d70-a71b-93968b49ddaa",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 4,
                  "endLine": 771,
                  "endColumn": 74,
                  "charOffset": 30026,
                  "charLength": 70,
                  "snippet": {
                    "text": "memcpy(status->serial_num, board_info.product_serial, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->serial_num, board_info.product_serial, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->serial_num, board_info.product_serial, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30026,
                        "charLength": 70
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->serial_num, <size of status->serial_num>,  board_info.product_serial,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e243f51b-50bb-4a37-9663-c493ba01a50d",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 41,
                  "endLine": 439,
                  "endColumn": 77,
                  "charOffset": 15804,
                  "charLength": 36,
                  "snippet": {
                    "text": "malloc(sizeof(amdsmi_process_info_t)",
                    "rendered": {
                      "text": "malloc(sizeof(amdsmi_process_info_t)",
                      "markdown": "`malloc(sizeof(amdsmi_process_info_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 15804,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f67bc4e4-390c-444a-9520-28134f699564",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 4,
                  "endLine": 414,
                  "endColumn": 40,
                  "charOffset": 14800,
                  "charLength": 36,
                  "snippet": {
                    "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(sku, token, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14800,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strcpy_s(sku,  AGA_MAX_STR_LEN,  token)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14800,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strlcpy(sku,  token,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5c4c0869-8f8c-4368-aec7-2c2efb98460d",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 8,
                  "endLine": 387,
                  "endColumn": 32,
                  "charOffset": 13964,
                  "charLength": 94,
                  "snippet": {
                    "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13964,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version, \n                AGA_MAX_STR_LEN,  std::to_string(version).c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13964,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  std::to_string(version).c_str(), \n                AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-643b48d5-3b1e-4a08-86ba-d52f532000ab",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 8,
                  "endLine": 384,
                  "endColumn": 58,
                  "charOffset": 13891,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13891,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13891,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-7ae57fdd-4d3b-4835-a59b-d5bb9a055da1",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 8,
                  "endLine": 372,
                  "endColumn": 58,
                  "charOffset": 13255,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13255,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13255,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c8482c5b-dc5e-4810-9381-9fd2a8420678",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 4,
                  "endLine": 364,
                  "endColumn": 70,
                  "charOffset": 12744,
                  "charLength": 66,
                  "snippet": {
                    "text": "strncpy(fw_version->firmware, block_name.c_str(), AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->firmware, block_name.c_str(), AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->firmware, block_name.c_str(), AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 12744,
                        "charLength": 66
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->firmware,  AGA_MAX_STR_LEN,  block_name.c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 12744,
                        "charLength": 66
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->firmware,  block_name.c_str(),  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-41c22b83-88f9-44c7-bc39-e301e4761091",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/rocm_smi_mock_impl.cc"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 4,
                  "endLine": 114,
                  "endColumn": 44,
                  "charOffset": 3084,
                  "charLength": 91,
                  "snippet": {
                    "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/rocm_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3084,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_ntfn_data.message, \n            MAX_EVENT_NOTIFICATION_MSG_SIZE,  \"test event\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/rocm_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3084,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_ntfn_data.message,  \"test event\", \n            MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-2f495cb5-4028-4c4c-a209-3d168e80f91a",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/amd_smi_mock_impl.cc"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 4,
                  "endLine": 117,
                  "endColumn": 44,
                  "charOffset": 3537,
                  "charLength": 91,
                  "snippet": {
                    "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/amd_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3537,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_ntfn_data.message, \n            MAX_EVENT_NOTIFICATION_MSG_SIZE,  \"test event\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/amd_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3537,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_ntfn_data.message,  \"test event\", \n            MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f832d191-ca24-48d9-aa1a-464133401dec",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/easylogging-bench-mt.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/easylogging-bench-mt.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-37b368f5-7403-4703-8b67-ee3ebd13d513",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/example/bench.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/example/bench.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-c5938e41-edf2-4495-ad8d-b33b2d955050",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/spdlog-null-async.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/spdlog-null-async.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-e0a88730-b1c9-4083-9f38-e6b59cf351ea",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_port.c"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 39,
                  "endLine": 116,
                  "endColumn": 66,
                  "charOffset": 4359,
                  "charLength": 27,
                  "snippet": {
                    "text": "http://bugs.opensolaris.org",
                    "rendered": {
                      "text": "http://bugs.opensolaris.org",
                      "markdown": "`http://bugs.opensolaris.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_port.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 4359,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "https://bugs.opensolaris.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-49061cf5-7be4-4e6f-a336-80fa3140e2e7",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/g2log-async.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/g2log-async.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-45f532ac-46d4-489b-8723-d55ab8a7abad",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/glog-bench-mt.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/glog-bench-mt.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-fd089eb3-4089-43a9-a369-9a642ef8a92e",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/event.c"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 47,
                  "endLine": 404,
                  "endColumn": 80,
                  "charOffset": 9602,
                  "charLength": 33,
                  "snippet": {
                    "text": "malloc (sizeof (struct ev_x_once)",
                    "rendered": {
                      "text": "malloc (sizeof (struct ev_x_once)",
                      "markdown": "`malloc (sizeof (struct ev_x_once)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/event.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 9602,
                        "charLength": 33
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-112ce4fb-ba76-4314-8faa-0ec73227b22c",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/spdlog-async.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/spdlog-async.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-0db6b589-f681-4099-80bc-e9c245fb1cd7",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/spdlog-bench-mt.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/spdlog-bench-mt.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-8f771668-75e8-4af6-ad93-ce72e5c4d0ab",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/include/base.hpp"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 4,
                  "endLine": 189,
                  "endColumn": 60,
                  "charOffset": 6406,
                  "charLength": 56,
                  "snippet": {
                    "text": "memcpy(&key.id[8], &gpu_unique_id, sizeof(gpu_unique_id)",
                    "rendered": {
                      "text": "memcpy(&key.id[8], &gpu_unique_id, sizeof(gpu_unique_id)",
                      "markdown": "`memcpy(&key.id[8], &gpu_unique_id, sizeof(gpu_unique_id)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/include/base.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6406,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&key.id[8], <size of &key.id[8]>,  &gpu_unique_id,  sizeof(gpu_unique_id)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-82f45b1b-e514-4714-8a1f-012a7df5902b",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/include/base.hpp"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 4,
                  "endLine": 184,
                  "endColumn": 48,
                  "charOffset": 6220,
                  "charLength": 44,
                  "snippet": {
                    "text": "memcpy(&key.id[0], &host_id, sizeof(host_id)",
                    "rendered": {
                      "text": "memcpy(&key.id[0], &host_id, sizeof(host_id)",
                      "markdown": "`memcpy(&key.id[0], &host_id, sizeof(host_id)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/include/base.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6220,
                        "charLength": 44
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&key.id[0], <size of &key.id[0]>,  &host_id,  sizeof(host_id)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e44b91ea-38a5-4522-84ac-11dc00c53341",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1412,
                  "startColumn": 12,
                  "endLine": 1414,
                  "endColumn": 52,
                  "charOffset": 62817,
                  "charLength": 147,
                  "snippet": {
                    "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62817,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_data[num_elem].message, \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE, \n                    event_description_(args->events[e]))"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62817,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_data[num_elem].message, \n                    event_description_(args->events[e]), \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b20737a6-13ed-4dd1-b8fe-1767b5520e89",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1277,
                  "startColumn": 12,
                  "endLine": 1277,
                  "endColumn": 75,
                  "charOffset": 57372,
                  "charLength": 63,
                  "snippet": {
                    "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 57372,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  AGA_MAX_EVENT_STR,  event_record.message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 57372,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_record.message,  AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f711b210-32c8-4778-9f9e-3cfd39d1042f",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1229,
                  "startColumn": 8,
                  "endLine": 1230,
                  "endColumn": 34,
                  "charOffset": 55389,
                  "charLength": 82,
                  "snippet": {
                    "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55389,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55389,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-2dd4c237-2c92-4c54-a96b-91127554f878",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1222,
                  "startColumn": 8,
                  "endLine": 1223,
                  "endColumn": 34,
                  "charOffset": 55110,
                  "charLength": 89,
                  "snippet": {
                    "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55110,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_record.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55110,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_record.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ac477920-c41f-4be2-865f-60f55d9473f3",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 2,
                  "endLine": 164,
                  "endColumn": 37,
                  "charOffset": 5022,
                  "charLength": 35,
                  "snippet": {
                    "text": "memcpy (vec_eo, vec_wi, fd_setsize)",
                    "rendered": {
                      "text": "memcpy (vec_eo, vec_wi, fd_setsize)",
                      "markdown": "`memcpy (vec_eo, vec_wi, fd_setsize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5022,
                        "charLength": 35
                      },
                      "insertedContent": {
                        "text": "memcpy_s(vec_eo, <size of vec_eo>,  vec_wi,  fd_setsize)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b387d580-d303-4002-bedf-a8852fb8636a",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 2,
                  "endLine": 156,
                  "endColumn": 37,
                  "charOffset": 4733,
                  "charLength": 35,
                  "snippet": {
                    "text": "memcpy (vec_wo, vec_wi, fd_setsize)",
                    "rendered": {
                      "text": "memcpy (vec_wo, vec_wi, fd_setsize)",
                      "markdown": "`memcpy (vec_wo, vec_wi, fd_setsize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 4733,
                        "charLength": 35
                      },
                      "insertedContent": {
                        "text": "memcpy_s(vec_wo, <size of vec_wo>,  vec_wi,  fd_setsize)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-bdfe4466-0b95-4e00-b34a-f9247ae95d82",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 2,
                  "endLine": 155,
                  "endColumn": 37,
                  "charOffset": 4694,
                  "charLength": 35,
                  "snippet": {
                    "text": "memcpy (vec_ro, vec_ri, fd_setsize)",
                    "rendered": {
                      "text": "memcpy (vec_ro, vec_ri, fd_setsize)",
                      "markdown": "`memcpy (vec_ro, vec_ri, fd_setsize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 4694,
                        "charLength": 35
                      },
                      "insertedContent": {
                        "text": "memcpy_s(vec_ro, <size of vec_ro>,  vec_ri,  fd_setsize)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-1e6acb02-2441-41ac-9e73-3b94d821e5f5",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 12,
                  "endLine": 560,
                  "endColumn": 44,
                  "charOffset": 21277,
                  "charLength": 92,
                  "snippet": {
                    "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                    "rendered": {
                      "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                      "markdown": "`strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 21277,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->peer_device[cnt].peer_device.name, <size of info->peer_device[cnt].peer_device.name>, \n                   (name + std::to_string(i)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 21277,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->peer_device[cnt].peer_device.name, \n                   (name + std::to_string(i, <size of info->peer_device[cnt].peer_device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c5cc7084-4d2b-4e13-b14a-87e4a66feb8b",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 8,
                  "endLine": 379,
                  "endColumn": 72,
                  "charOffset": 14301,
                  "charLength": 64,
                  "snippet": {
                    "text": "strncpy(event.message, event_buffer_get_message(event_buffer, i)",
                    "rendered": {
                      "text": "strncpy(event.message, event_buffer_get_message(event_buffer, i)",
                      "markdown": "`strncpy(event.message, event_buffer_get_message(event_buffer, i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14301,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  i,  event_buffer_get_message(event_buffer)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14301,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_buffer_get_message(event_buffer,  i)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5f6b9f03-793a-4aa6-92f9-8165e30e9104",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 8,
                  "endLine": 372,
                  "endColumn": 79,
                  "charOffset": 14004,
                  "charLength": 71,
                  "snippet": {
                    "text": "strncpy(event_record.message, event_buffer_get_message(event_buffer, i)",
                    "rendered": {
                      "text": "strncpy(event_record.message, event_buffer_get_message(event_buffer, i)",
                      "markdown": "`strncpy(event_record.message, event_buffer_get_message(event_buffer, i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14004,
                        "charLength": 71
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_record.message,  i,  event_buffer_get_message(event_buffer)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14004,
                        "charLength": 71
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_record.message,  event_buffer_get_message(event_buffer,  i)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5451b995-2529-4510-beb0-ac8a99f2522b",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 8,
                  "endLine": 263,
                  "endColumn": 71,
                  "charOffset": 10260,
                  "charLength": 63,
                  "snippet": {
                    "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10260,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  AGA_MAX_EVENT_STR,  event_record.message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10260,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_record.message,  AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-16b621bf-3593-48e6-b61c-397bade9ba32",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 4,
                  "endLine": 187,
                  "endColumn": 77,
                  "charOffset": 7395,
                  "charLength": 73,
                  "snippet": {
                    "text": "strncpy(status->pcie_status.pcie_bus_id, \"0000:59:00.0\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->pcie_status.pcie_bus_id, \"0000:59:00.0\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->pcie_status.pcie_bus_id, \"0000:59:00.0\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7395,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->pcie_status.pcie_bus_id,  AGA_MAX_STR_LEN,  \"0000:59:00.0\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7395,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->pcie_status.pcie_bus_id,  \"0000:59:00.0\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-80e06383-970f-4bd7-b14a-b38b1fce9e99",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 4,
                  "endLine": 184,
                  "endColumn": 60,
                  "charOffset": 7257,
                  "charLength": 56,
                  "snippet": {
                    "text": "strncpy(status->memory_vendor, \"hynix\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->memory_vendor, \"hynix\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->memory_vendor, \"hynix\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7257,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->memory_vendor,  AGA_MAX_STR_LEN,  \"hynix\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7257,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->memory_vendor,  \"hynix\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-21c08bf2-aaa4-4590-a3a2-49d3fe617aeb",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 4,
                  "endLine": 175,
                  "endColumn": 56,
                  "charOffset": 6723,
                  "charLength": 52,
                  "snippet": {
                    "text": "strncpy(status->card_sku, \"D65205\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->card_sku, \"D65205\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->card_sku, \"D65205\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6723,
                        "charLength": 52
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->card_sku,  AGA_MAX_STR_LEN,  \"D65205\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6723,
                        "charLength": 52
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->card_sku,  \"D65205\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-207eadb5-a4a6-42da-8a89-dad242708053",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 4,
                  "endLine": 173,
                  "endColumn": 77,
                  "charOffset": 6628,
                  "charLength": 73,
                  "snippet": {
                    "text": "strncpy(status->vbios_version, \"022.040.003.041.000001\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_version, \"022.040.003.041.000001\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_version, \"022.040.003.041.000001\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6628,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_version,  AGA_MAX_STR_LEN,  \"022.040.003.041.000001\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6628,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_version,  \"022.040.003.041.000001\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-98cfd804-cbc5-452c-a745-2139dd40b031",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 4,
                  "endLine": 171,
                  "endColumn": 73,
                  "charOffset": 6523,
                  "charLength": 69,
                  "snippet": {
                    "text": "strncpy(status->vbios_part_number, \"113-D65205-107\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_part_number, \"113-D65205-107\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_part_number, \"113-D65205-107\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6523,
                        "charLength": 69
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_part_number,  AGA_MAX_STR_LEN,  \"113-D65205-107\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6523,
                        "charLength": 69
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_part_number,  \"113-D65205-107\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-de987b4a-9fed-4ad9-92e4-78c3cabbcc4e",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 4,
                  "endLine": 169,
                  "endColumn": 61,
                  "charOffset": 6426,
                  "charLength": 57,
                  "snippet": {
                    "text": "strncpy(status->driver_version, \"6.3.6\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->driver_version, \"6.3.6\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->driver_version, \"6.3.6\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6426,
                        "charLength": 57
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->driver_version,  AGA_MAX_STR_LEN,  \"6.3.6\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6426,
                        "charLength": 57
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->driver_version,  \"6.3.6\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-30b53678-7bab-4f43-ad3c-92ee229028aa",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 4,
                  "endLine": 164,
                  "endColumn": 58,
                  "charOffset": 6191,
                  "charLength": 54,
                  "snippet": {
                    "text": "strncpy(status->card_model, \"0x0b0c\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->card_model, \"0x0b0c\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->card_model, \"0x0b0c\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6191,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->card_model,  AGA_MAX_STR_LEN,  \"0x0b0c\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6191,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->card_model,  \"0x0b0c\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-3d1bf0c2-bcb5-4d26-846e-06bc6a23a843",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 4,
                  "endLine": 162,
                  "endColumn": 28,
                  "charOffset": 6053,
                  "charLength": 101,
                  "snippet": {
                    "text": "strncpy(status->card_series, \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\",\n            AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->card_series, \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\",\n            AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->card_series, \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\",\n            AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6053,
                        "charLength": 101
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->card_series, \n            AGA_MAX_STR_LEN,  \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6053,
                        "charLength": 101
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->card_series,  \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\", \n            AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-89de68d6-1fbc-487e-85da-cb30f51bcf9f",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 4,
                  "endLine": 159,
                  "endColumn": 66,
                  "charOffset": 5953,
                  "charLength": 62,
                  "snippet": {
                    "text": "strncpy(status->serial_num, \"PCB046982-0071\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->serial_num, \"PCB046982-0071\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->serial_num, \"PCB046982-0071\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5953,
                        "charLength": 62
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->serial_num,  AGA_MAX_STR_LEN,  \"PCB046982-0071\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5953,
                        "charLength": 62
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->serial_num,  \"PCB046982-0071\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-1272be84-4ac8-4be0-b159-ac87b13ed7ae",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 4,
                  "endLine": 109,
                  "endColumn": 58,
                  "charOffset": 3988,
                  "charLength": 54,
                  "snippet": {
                    "text": "strncpy(fw_version->version, version, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, version, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, version, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3988,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  version)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3988,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  version,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-72b96c96-5b52-410e-849c-c842fcf946ad",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 4,
                  "endLine": 108,
                  "endColumn": 57,
                  "charOffset": 3929,
                  "charLength": 53,
                  "snippet": {
                    "text": "strncpy(fw_version->firmware, block, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->firmware, block, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->firmware, block, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3929,
                        "charLength": 53
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->firmware,  AGA_MAX_STR_LEN,  block)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3929,
                        "charLength": 53
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->firmware,  block,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-6ad5b521-dac4-4767-ad25-e918d1b98f6e",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu.cc"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 4,
                  "endLine": 286,
                  "endColumn": 57,
                  "charOffset": 10500,
                  "charLength": 53,
                  "snippet": {
                    "text": "memcpy(&stats_, stats, sizeof(aga_gpu_watch_fields_t)",
                    "rendered": {
                      "text": "memcpy(&stats_, stats, sizeof(aga_gpu_watch_fields_t)",
                      "markdown": "`memcpy(&stats_, stats, sizeof(aga_gpu_watch_fields_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10500,
                        "charLength": 53
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&stats_, <size of &stats_>,  stats,  sizeof(aga_gpu_watch_fields_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-89de820b-a440-49f2-a4b2-faefe717bb50",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu.cc"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 4,
                  "endLine": 278,
                  "endColumn": 49,
                  "charOffset": 10261,
                  "charLength": 45,
                  "snippet": {
                    "text": "strcpy(info->device.name, device_name.c_str()",
                    "rendered": {
                      "text": "strcpy(info->device.name, device_name.c_str()",
                      "markdown": "`strcpy(info->device.name, device_name.c_str()`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10261,
                        "charLength": 45
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->device.name, <size of info->device.name>,  device_name.c_str()"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10261,
                        "charLength": 45
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->device.name,  device_name.c_str(, <size of info->device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-059fd2e1-ca62-40cf-91e2-6317e736f8bc",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu.cc"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 4,
                  "endLine": 143,
                  "endColumn": 47,
                  "charOffset": 3955,
                  "charLength": 43,
                  "snippet": {
                    "text": "memcpy(spec, &spec_, sizeof(aga_gpu_spec_t)",
                    "rendered": {
                      "text": "memcpy(spec, &spec_, sizeof(aga_gpu_spec_t)",
                      "markdown": "`memcpy(spec, &spec_, sizeof(aga_gpu_spec_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3955,
                        "charLength": 43
                      },
                      "insertedContent": {
                        "text": "memcpy_s(spec, <size of spec>,  &spec_,  sizeof(aga_gpu_spec_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f35541ea-70db-4d41-b233-e4a592eddac1",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/svc/utils.hpp"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 4,
                  "endLine": 61,
                  "endColumn": 37,
                  "charOffset": 1879,
                  "charLength": 76,
                  "snippet": {
                    "text": "memcpy(api_spec->id, proto_key.data(),\n           SDK_MIN(proto_key.length()",
                    "rendered": {
                      "text": "memcpy(api_spec->id, proto_key.data(),\n           SDK_MIN(proto_key.length()",
                      "markdown": "`memcpy(api_spec->id, proto_key.data(),\n           SDK_MIN(proto_key.length()`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/utils.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 1879,
                        "charLength": 76
                      },
                      "insertedContent": {
                        "text": "memcpy_s(api_spec->id, <size of api_spec->id>,  proto_key.data(), \n           SDK_MIN(proto_key.length()"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a49d6bc5-bb72-48c9-939e-c63d81a20d8e",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 4,
                  "endLine": 125,
                  "endColumn": 53,
                  "charOffset": 3334,
                  "charLength": 49,
                  "snippet": {
                    "text": "memcpy(spec, &spec_, sizeof(aga_gpu_watch_spec_t)",
                    "rendered": {
                      "text": "memcpy(spec, &spec_, sizeof(aga_gpu_watch_spec_t)",
                      "markdown": "`memcpy(spec, &spec_, sizeof(aga_gpu_watch_spec_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3334,
                        "charLength": 49
                      },
                      "insertedContent": {
                        "text": "memcpy_s(spec, <size of spec>,  &spec_,  sizeof(aga_gpu_watch_spec_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-14e208b9-9491-49a3-b0c9-ad17567a65e0",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 4,
                  "endLine": 96,
                  "endColumn": 53,
                  "charOffset": 2498,
                  "charLength": 49,
                  "snippet": {
                    "text": "memcpy(&spec_, spec, sizeof(aga_gpu_watch_spec_t)",
                    "rendered": {
                      "text": "memcpy(&spec_, spec, sizeof(aga_gpu_watch_spec_t)",
                      "markdown": "`memcpy(&spec_, spec, sizeof(aga_gpu_watch_spec_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 2498,
                        "charLength": 49
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&spec_, <size of &spec_>,  spec,  sizeof(aga_gpu_watch_spec_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ff635dec-22df-47c7-b66e-bd9d6173cb38",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/svc/events_svc.hpp"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 4,
                  "endLine": 247,
                  "endColumn": 68,
                  "charOffset": 8094,
                  "charLength": 64,
                  "snippet": {
                    "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_CLIENT_STR)",
                    "rendered": {
                      "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_CLIENT_STR)",
                      "markdown": "`strncpy(req.client, context->peer().c_str(), AGA_MAX_CLIENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/events_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8094,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strcpy_s(req.client,  AGA_MAX_CLIENT_STR,  context->peer().c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/events_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8094,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strlcpy(req.client,  context->peer().c_str(),  AGA_MAX_CLIENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c562641c-f883-4f57-9886-0c16369d5397",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/sdk/include/sdk/mem.hpp"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 11,
                  "endLine": 163,
                  "endColumn": 23,
                  "charOffset": 5196,
                  "charLength": 12,
                  "snippet": {
                    "text": "malloc(size)",
                    "rendered": {
                      "text": "malloc(size)",
                      "markdown": "`malloc(size)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/sdk/include/sdk/mem.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5196,
                        "charLength": 12
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b3aca4c4-c2ba-4da5-b23d-6f1e8aa221e9",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/svc/gpu_watch_svc.hpp"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 4,
                  "endLine": 172,
                  "endColumn": 78,
                  "charOffset": 5896,
                  "charLength": 74,
                  "snippet": {
                    "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_GPU_WATCH_CLIENT_STR)",
                    "rendered": {
                      "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_GPU_WATCH_CLIENT_STR)",
                      "markdown": "`strncpy(req.client, context->peer().c_str(), AGA_MAX_GPU_WATCH_CLIENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/gpu_watch_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5896,
                        "charLength": 74
                      },
                      "insertedContent": {
                        "text": "strcpy_s(req.client,  AGA_MAX_GPU_WATCH_CLIENT_STR,  context->peer().c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/gpu_watch_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5896,
                        "charLength": 74
                      },
                      "insertedContent": {
                        "text": "strlcpy(req.client,  context->peer().c_str(),  AGA_MAX_GPU_WATCH_CLIENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-3cb42579-c7e6-440e-920c-03bd6acec7ac",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/main.cc"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 13,
                  "endLine": 116,
                  "endColumn": 22,
                  "charOffset": 3485,
                  "charLength": 9,
                  "snippet": {
                    "text": "127.0.0.1",
                    "rendered": {
                      "text": "127.0.0.1",
                      "markdown": "`127.0.0.1`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "ManualReview",
            "DevSkimConfidence": "High",
            "tags": [
              "Hygiene.Network.AccessingLocalhost"
            ]
          }
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}