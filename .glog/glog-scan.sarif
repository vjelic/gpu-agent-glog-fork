{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Glog.AI",
          "organization": "Glog.AI",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "glog-75203c6a-2e69-4108-ba94-cbb1dbf001b7",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-108cb6fa-02f9-4a4f-b9a5-c156e3a6b25d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-cc466c2f-0acb-4ec6-94ae-bdf6e0c15340",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-f569bb6d-5515-4d2d-8dff-30a2158c536e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-ce28d3db-59ca-4768-af52-89a1c58000b6",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-a049acf7-ae18-4eac-b56f-631e744a415f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-82e77abb-d9f9-4369-ab98-623b81cdb699",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS173237"
                ]
              }
            },
            {
              "id": "glog-5bb16b43-4c9a-4bfe-a407-e15d851fd4a9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-61c52e9b-aad0-437d-aeff-68cdb7bf680d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-92ab8a85-823e-471e-b3ba-a759cdf1c9f0",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-a80a2cff-9430-41bf-9652-bdcc2484f332",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-1e5423bd-bddb-4e4c-9fc3-03c4aa28d5ba",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-c3c97c10-f93c-47a9-bad9-f93d83c33587",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS140021"
                ]
              }
            },
            {
              "id": "glog-6d2effe0-6024-4f03-8c36-3ee37165cb2d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-c853acf0-94bd-4e14-9331-d52127ccd0c2",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-ba345323-8622-40e2-8ee3-f63e105edfac",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-d759c710-2412-4b9c-957d-e1673549e533",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-846b1d91-8956-4359-9b0d-be63e84f9f99",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-2e0a7056-ebb7-4f7f-8b3a-095cd0c88221",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-6c430400-ebf2-4e4b-93c9-c50861dd15c6",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-4142744c-de49-4b6c-948a-632a50ea1f0a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-eb129158-7dfa-4f6d-913d-42f8b4b74364",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-021a7151-fe97-4753-b9e3-40572fe33013",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-e5539f92-ca96-4a3d-a975-63ec70e02cbd",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-94c45124-ebba-4038-b149-9992761d280f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-7284277f-1a21-4ee8-be58-1df93dbe3882",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-c4089cec-8819-4f5e-ac3f-a08817f6e2b1",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-aeeebc63-09ca-4486-8591-4e71b736fa51",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-843adeec-0eb6-4c2c-8706-07831f591b1b",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-8816d26d-e6f0-458c-a693-3a7bbc482510",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-ef3302ec-c3b1-46d9-8485-e1a4c8e381d5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-78d100d7-dda8-4775-921f-de5371120c53",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-0c34b9b0-1944-46e6-8aa3-a3e66312e025",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-aa398e62-6063-42f0-ad9d-5bf3186db36e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5b5752f1-df7e-45d2-8a42-c1d29c038863",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-66a08816-419f-43b3-987d-82aa608841d9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5ceaf561-ab11-4ef4-b0a8-ea64299f9497",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-674e1fde-02a1-43c4-a8cd-483dbf9ddc96",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-42645061-f39b-486a-8e14-e31acf81eacc",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-b7c3d1d1-607b-41dd-9b8f-7745cd65adc0",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-b5e5bbcb-d035-433d-b34e-8476fa802506",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-d987cbcc-bea5-45b4-96df-83249d7af91e",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-e19ea883-c409-4d87-a0c9-39d1e5873fc4",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-9ca74cf2-f1a2-4742-9731-3ca4ec7939e9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-1bcf9a8a-3f3a-428e-a79d-d4043af2e171",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-5921491d-a28e-4093-9c95-346ea0ef2921",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-9366bf14-b9b0-46cf-b559-5fd2058420bb",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-176d6f4e-c9ca-49d9-befe-b08432b257d0",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-b110f3da-8733-4340-9225-72c5f8a345d2",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-049845b0-c29f-44b6-9686-17c0f58f89b5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-9b3872e0-d697-4db0-9f8d-f50c230debaa",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-7ba0404c-2ef8-4ec6-8d14-d59ecf07ea70",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-88e9e5dd-e4be-40d5-9a74-066942cbeee5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS137138"
                ]
              }
            },
            {
              "id": "glog-65d6dec2-1968-4831-a043-6f4d74358030",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-f5324127-3ef2-4ee3-a2a9-af9ebe080c98",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5775cdbd-a2e3-4ed3-b216-bf5eff018740",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-c978cf40-104a-42bd-8a98-7d88a0ab7f7a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-86fdb64e-6b90-4f9e-bc89-936504a93d67",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-3eae3521-b2cb-46e8-bd8f-731aaf89f4f0",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-640d7a2a-3fce-4e36-809d-9ef1f0f4f18d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-52633f88-72e0-4245-a8c8-bdbd4ce21cfb",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-5817d52a-d4b6-41c7-aa27-d32cf68f7203",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-62cc629a-3132-4c71-a856-61865cd79945",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-dc454438-cdf9-4756-986f-0fae98960a62",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-a8ed5c1b-4266-4d81-a481-361da3eeca8a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-c05bc355-3849-48a7-8bd7-7dde6f978e15",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-e39c960f-a54e-407c-b45b-f50b7dd5367c",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-0f1468c1-35ab-4c24-8739-f7ae98e3a7fa",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-496d448c-0945-4b94-bddd-b3d3319e4135",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-b7df63ef-6d21-4969-80e3-a196f3aeaa44",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-de768a8a-65cc-4ffd-891c-bbddd98ff650",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-147f60bd-081a-4530-9e4f-b6dae18c3f22",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-df9fac77-b4e0-44cb-baf4-0439b72788a9",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-c76eaa7b-f05d-4f1d-b1da-7b09e423c0e7",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-b7acaee4-e994-4ac2-aeb6-77a0ab05ecc8",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-43bcca44-c279-477c-b032-ee35de40831d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-311d9c21-eb37-4f66-9a4a-3c1701222e01",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS185832"
                ]
              }
            },
            {
              "id": "glog-2fbdc708-1557-4f39-8b45-92d3c4c23b36",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-e3785ee6-5779-4275-aef0-496faf8d3cbe",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-97c0f161-0847-49f3-9f3b-771e9a623949",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-52a459e5-1847-4963-919e-b83548df07ea",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-3c2b66a9-cdb8-4a62-afb0-a51c222a6c9d",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-e3136326-dc68-4db2-b62a-018820ae6df1",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-e7f3d967-50db-4368-b451-e5d368c1379c",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-a0dd25cc-e932-433d-ac19-acecf173c8bd",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-e6377837-d0d8-493e-9838-b63122fc7a8a",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-16ccb2c6-e204-463a-b8f9-904bcac27218",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-e59c24d6-2129-4baf-8064-44cb02312697",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-13898cdb-9917-43e3-ba65-61ce83c61888",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-607fb665-4ee6-4a56-85c6-ae5bdaa5b407",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-d5643bee-fb47-4d54-9efb-dda4a005956b",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-36b71c53-25f8-470e-98be-c93069da982c",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-bc11c550-d8b5-41a6-90b9-d9c3f5ac9468",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-4f8e21b0-a75b-43d2-929f-985f0f35e32c",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-ece6e129-6dae-46c8-ac1a-ef817f4b7b00",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-f0c4f7d6-07c9-4490-b080-556f0c5e89bb",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            },
            {
              "id": "glog-8207c676-c5dc-4103-b653-779088e214ce",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-a905f2e6-3cff-4871-a997-f4af37b4a46f",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS121708"
                ]
              }
            },
            {
              "id": "glog-f4152590-de8b-4040-a371-dd6035e5dc17",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS162092"
                ]
              }
            },
            {
              "id": "glog-1399142f-c747-4f0b-a453-dd36870c47b5",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS161085"
                ]
              }
            },
            {
              "id": "glog-9c38b25c-8694-4a92-b198-855ff0603118",
              "help": {
                "text": ""
              },
              "properties": {
                "tags": [
                  "DS111237"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "glog-cc466c2f-0acb-4ec6-94ae-bdf6e0c15340",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 2175,
                  "startColumn": 63,
                  "endLine": 2175,
                  "endColumn": 76,
                  "charOffset": 58356,
                  "charLength": 13,
                  "snippet": {
                    "text": "strlen(value)",
                    "rendered": {
                      "text": "strlen(value)",
                      "markdown": "`strlen(value)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58356,
                        "charLength": 13
                      },
                      "insertedContent": {
                        "text": "strlen_s(value, <size of value>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58356,
                        "charLength": 13
                      },
                      "insertedContent": {
                        "text": "strnlen(value, <size of value>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-75203c6a-2e69-4108-ba94-cbb1dbf001b7",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                },
                "region": {
                  "startLine": 2169,
                  "startColumn": 55,
                  "endLine": 2169,
                  "endColumn": 72,
                  "charOffset": 58186,
                  "charLength": 17,
                  "snippet": {
                    "text": "strlen(str_value)",
                    "rendered": {
                      "text": "strlen(str_value)",
                      "markdown": "`strlen(str_value)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58186,
                        "charLength": 17
                      },
                      "insertedContent": {
                        "text": "strlen_s(str_value, <size of str_value>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58186,
                        "charLength": 17
                      },
                      "insertedContent": {
                        "text": "strnlen(str_value, <size of str_value>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-108cb6fa-02f9-4a4f-b9a5-c156e3a6b25d",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/sinks/file_sinks.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/sinks/file_sinks.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-918b4605-51cf-43a9-818a-aa6407ce393e",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 4,
                  "endLine": 482,
                  "endColumn": 46,
                  "charOffset": 14933,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"8081828384858687888990919293949596979899\"",
                    "rendered": {
                      "text": "\"8081828384858687888990919293949596979899\"",
                      "markdown": "`\"8081828384858687888990919293949596979899\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-f569bb6d-5515-4d2d-8dff-30a2158c536e",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 4,
                  "endLine": 479,
                  "endColumn": 46,
                  "charOffset": 14792,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"2021222324252627282930313233343536373839\"",
                    "rendered": {
                      "text": "\"2021222324252627282930313233343536373839\"",
                      "markdown": "`\"2021222324252627282930313233343536373839\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-ce28d3db-59ca-4768-af52-89a1c58000b6",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 4,
                  "endLine": 481,
                  "endColumn": 46,
                  "charOffset": 14886,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"6061626364656667686970717273747576777879\"",
                    "rendered": {
                      "text": "\"6061626364656667686970717273747576777879\"",
                      "markdown": "`\"6061626364656667686970717273747576777879\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-a049acf7-ae18-4eac-b56f-631e744a415f",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 4,
                  "endLine": 480,
                  "endColumn": 46,
                  "charOffset": 14839,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"4041424344454647484950515253545556575859\"",
                    "rendered": {
                      "text": "\"4041424344454647484950515253545556575859\"",
                      "markdown": "`\"4041424344454647484950515253545556575859\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-82e77abb-d9f9-4369-ab98-623b81cdb699",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 4,
                  "endLine": 478,
                  "endColumn": 46,
                  "charOffset": 14745,
                  "charLength": 42,
                  "snippet": {
                    "text": "\"0001020304050607080910111213141516171819\"",
                    "rendered": {
                      "text": "\"0001020304050607080910111213141516171819\"",
                      "markdown": "`\"0001020304050607080910111213141516171819\"`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "Medium",
            "tags": [
              "Implementation.Privacy.Token"
            ]
          }
        },
        {
          "ruleId": "glog-5bb16b43-4c9a-4bfe-a407-e15d851fd4a9",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 4779,
                  "startColumn": 10,
                  "endLine": 4779,
                  "endColumn": 32,
                  "charOffset": 134170,
                  "charLength": 22,
                  "snippet": {
                    "text": "strcpy (path, w->path)",
                    "rendered": {
                      "text": "strcpy (path, w->path)",
                      "markdown": "`strcpy (path, w->path)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134170,
                        "charLength": 22
                      },
                      "insertedContent": {
                        "text": "strcpy_s(path, <size of path>,  w->path)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134170,
                        "charLength": 22
                      },
                      "insertedContent": {
                        "text": "strlcpy(path,  w->path, <size of path>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-61c52e9b-aad0-437d-aeff-68cdb7bf680d",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 4776,
                  "startColumn": 50,
                  "endLine": 4776,
                  "endColumn": 66,
                  "charOffset": 134097,
                  "charLength": 16,
                  "snippet": {
                    "text": "strlen (w->path)",
                    "rendered": {
                      "text": "strlen (w->path)",
                      "markdown": "`strlen (w->path)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134097,
                        "charLength": 16
                      },
                      "insertedContent": {
                        "text": "strlen_s(w->path, <size of w->path>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 134097,
                        "charLength": 16
                      },
                      "insertedContent": {
                        "text": "strnlen(w->path, <size of w->path>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-92ab8a85-823e-471e-b3ba-a759cdf1c9f0",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 32,
                  "endLine": 165,
                  "endColumn": 47,
                  "charOffset": 5172,
                  "charLength": 15,
                  "snippet": {
                    "text": "strlen(buffer_)",
                    "rendered": {
                      "text": "strlen(buffer_)",
                      "markdown": "`strlen(buffer_)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5172,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strlen_s(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5172,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strnlen(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a80a2cff-9430-41bf-9652-bdcc2484f332",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1988,
                  "startColumn": 29,
                  "endLine": 1988,
                  "endColumn": 41,
                  "charOffset": 67130,
                  "charLength": 12,
                  "snippet": {
                    "text": "strlen (msg)",
                    "rendered": {
                      "text": "strlen (msg)",
                      "markdown": "`strlen (msg)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 67130,
                        "charLength": 12
                      },
                      "insertedContent": {
                        "text": "strlen_s(msg, <size of msg>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 67130,
                        "charLength": 12
                      },
                      "insertedContent": {
                        "text": "strnlen(msg, <size of msg>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-1e5423bd-bddb-4e4c-9fc3-03c4aa28d5ba",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1709,
                  "startColumn": 6,
                  "endLine": 1709,
                  "endColumn": 24,
                  "charOffset": 58214,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 8)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 8)",
                      "markdown": "`memcpy (&r, &x, 8)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 58214,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  8)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c3c97c10-f93c-47a9-bad9-f93d83c33587",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 28,
                  "endLine": 179,
                  "endColumn": 43,
                  "charOffset": 5644,
                  "charLength": 15,
                  "snippet": {
                    "text": "strlen(buffer_)",
                    "rendered": {
                      "text": "strlen(buffer_)",
                      "markdown": "`strlen(buffer_)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5644,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strlen_s(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "If a string is missing a null terminator, strlen will read past the end of the buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/format.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5644,
                        "charLength": 15
                      },
                      "insertedContent": {
                        "text": "strnlen(buffer_, <size of buffer_>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-6d2effe0-6024-4f03-8c36-3ee37165cb2d",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1669,
                  "startColumn": 6,
                  "endLine": 1669,
                  "endColumn": 24,
                  "charOffset": 57240,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 8)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 8)",
                      "markdown": "`memcpy (&r, &x, 8)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 57240,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  8)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c853acf0-94bd-4e14-9331-d52127ccd0c2",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1393,
                  "startColumn": 70,
                  "endLine": 1393,
                  "endColumn": 97,
                  "charOffset": 48877,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 48877,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ba345323-8622-40e2-8ee3-f63e105edfac",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1371,
                  "startColumn": 57,
                  "endLine": 1371,
                  "endColumn": 84,
                  "charOffset": 47207,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 47207,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-d759c710-2412-4b9c-957d-e1673549e533",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1370,
                  "startColumn": 57,
                  "endLine": 1370,
                  "endColumn": 84,
                  "charOffset": 47118,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 47118,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-846b1d91-8956-4359-9b0d-be63e84f9f99",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1639,
                  "startColumn": 6,
                  "endLine": 1639,
                  "endColumn": 24,
                  "charOffset": 56565,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 4)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 4)",
                      "markdown": "`memcpy (&r, &x, 4)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 56565,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  4)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-2e0a7056-ebb7-4f7f-8b3a-095cd0c88221",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1599,
                  "startColumn": 6,
                  "endLine": 1599,
                  "endColumn": 24,
                  "charOffset": 55670,
                  "charLength": 18,
                  "snippet": {
                    "text": "memcpy (&r, &x, 4)",
                    "rendered": {
                      "text": "memcpy (&r, &x, 4)",
                      "markdown": "`memcpy (&r, &x, 4)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55670,
                        "charLength": 18
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&r, <size of &r>,  &x,  4)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-6c430400-ebf2-4e4b-93c9-c50861dd15c6",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1350,
                  "startColumn": 72,
                  "endLine": 1350,
                  "endColumn": 99,
                  "charOffset": 45419,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 45419,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-4142744c-de49-4b6c-948a-632a50ea1f0a",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1402,
                  "startColumn": 66,
                  "endLine": 1402,
                  "endColumn": 93,
                  "charOffset": 49733,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 49733,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-eb129158-7dfa-4f6d-913d-42f8b4b74364",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 57,
                  "endLine": 1369,
                  "endColumn": 84,
                  "charOffset": 47029,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (ptr, &v, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (ptr, &v, sizeof (v)",
                      "markdown": "`memcpy (ptr, &v, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 47029,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(ptr, <size of ptr>,  &v,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-021a7151-fe97-4753-b9e3-40572fe33013",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1351,
                  "startColumn": 72,
                  "endLine": 1351,
                  "endColumn": 99,
                  "charOffset": 45533,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 45533,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e5539f92-ca96-4a3d-a975-63ec70e02cbd",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev.c"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 72,
                  "endLine": 1349,
                  "endColumn": 99,
                  "charOffset": 45305,
                  "charLength": 27,
                  "snippet": {
                    "text": "memcpy (&v, ptr, sizeof (v)",
                    "rendered": {
                      "text": "memcpy (&v, ptr, sizeof (v)",
                      "markdown": "`memcpy (&v, ptr, sizeof (v)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 45305,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&v, <size of &v>,  ptr,  sizeof (v)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-94c45124-ebba-4038-b149-9992761d280f",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/stacktrace.h"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 28,
                  "endLine": 35,
                  "endColumn": 48,
                  "charOffset": 1065,
                  "charLength": 20,
                  "snippet": {
                    "text": "malloc(funcnamesize)",
                    "rendered": {
                      "text": "malloc(funcnamesize)",
                      "markdown": "`malloc(funcnamesize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/fmt/bundled/stacktrace.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 1065,
                        "charLength": 20
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-7284277f-1a21-4ee8-be58-1df93dbe3882",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/pattern_formatter_impl.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/pattern_formatter_impl.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-c4089cec-8819-4f5e-ac3f-a08817f6e2b1",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/logger_impl.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/logger_impl.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-aeeebc63-09ca-4486-8591-4e71b736fa51",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 456,
                  "startColumn": 8,
                  "endLine": 456,
                  "endColumn": 64,
                  "charOffset": 17718,
                  "charLength": 56,
                  "snippet": {
                    "text": "strncpy(status->vbios_part_number, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_part_number, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_part_number, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 17718,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_part_number,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 17718,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_part_number,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-843adeec-0eb6-4c2c-8706-07831f591b1b",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/file_helper.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/file_helper.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-8816d26d-e6f0-458c-a693-3a7bbc482510",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 39,
                  "endLine": 259,
                  "endColumn": 73,
                  "charOffset": 9172,
                  "charLength": 34,
                  "snippet": {
                    "text": "malloc(sizeof(rsmi_process_info_t)",
                    "rendered": {
                      "text": "malloc(sizeof(rsmi_process_info_t)",
                      "markdown": "`malloc(sizeof(rsmi_process_info_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 9172,
                        "charLength": 34
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ef3302ec-c3b1-46d9-8485-e1a4c8e381d5",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/include/spdlog/details/os.h"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/include/spdlog/details/os.h"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-78d100d7-dda8-4775-921f-de5371120c53",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 912,
                  "startColumn": 12,
                  "endLine": 913,
                  "endColumn": 44,
                  "charOffset": 37022,
                  "charLength": 92,
                  "snippet": {
                    "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                    "rendered": {
                      "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                      "markdown": "`strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 37022,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->peer_device[cnt].peer_device.name, <size of info->peer_device[cnt].peer_device.name>, \n                   (name + std::to_string(i)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 37022,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->peer_device[cnt].peer_device.name, \n                   (name + std::to_string(i, <size of info->peer_device[cnt].peer_device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-0c34b9b0-1944-46e6-8aa3-a3e66312e025",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 8,
                  "endLine": 206,
                  "endColumn": 32,
                  "charOffset": 7373,
                  "charLength": 94,
                  "snippet": {
                    "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7373,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version, \n                AGA_MAX_STR_LEN,  std::to_string(version).c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7373,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  std::to_string(version).c_str(), \n                AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-aa398e62-6063-42f0-ad9d-5bf3186db36e",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 8,
                  "endLine": 203,
                  "endColumn": 58,
                  "charOffset": 7300,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7300,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7300,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5b5752f1-df7e-45d2-8a42-c1d29c038863",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 8,
                  "endLine": 190,
                  "endColumn": 58,
                  "charOffset": 6645,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6645,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6645,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-66a08816-419f-43b3-987d-82aa608841d9",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 4,
                  "endLine": 235,
                  "endColumn": 40,
                  "charOffset": 8269,
                  "charLength": 36,
                  "snippet": {
                    "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(sku, token, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8269,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strcpy_s(sku,  AGA_MAX_STR_LEN,  token)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8269,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strlcpy(sku,  token,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5ceaf561-ab11-4ef4-b0a8-ea64299f9497",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 4,
                  "endLine": 182,
                  "endColumn": 28,
                  "charOffset": 6114,
                  "charLength": 89,
                  "snippet": {
                    "text": "strncpy(fw_version->firmware, gpu_fw_block_name_str_(block),\n            AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->firmware, gpu_fw_block_name_str_(block),\n            AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->firmware, gpu_fw_block_name_str_(block),\n            AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6114,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->firmware, \n            AGA_MAX_STR_LEN,  gpu_fw_block_name_str_(block))"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6114,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->firmware,  gpu_fw_block_name_str_(block), \n            AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-674e1fde-02a1-43c4-a8cd-483dbf9ddc96",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_port.c"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 39,
                  "endLine": 116,
                  "endColumn": 66,
                  "charOffset": 4359,
                  "charLength": 27,
                  "snippet": {
                    "text": "http://bugs.opensolaris.org",
                    "rendered": {
                      "text": "http://bugs.opensolaris.org",
                      "markdown": "`http://bugs.opensolaris.org`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_port.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 4359,
                        "charLength": 27
                      },
                      "insertedContent": {
                        "text": "https://bugs.opensolaris.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-42645061-f39b-486a-8e14-e31acf81eacc",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/event.c"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 47,
                  "endLine": 404,
                  "endColumn": 80,
                  "charOffset": 9602,
                  "charLength": 33,
                  "snippet": {
                    "text": "malloc (sizeof (struct ev_x_once)",
                    "rendered": {
                      "text": "malloc (sizeof (struct ev_x_once)",
                      "markdown": "`malloc (sizeof (struct ev_x_once)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/event.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 9602,
                        "charLength": 33
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b7c3d1d1-607b-41dd-9b8f-7745cd65adc0",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/example/bench.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/example/bench.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-b5e5bbcb-d035-433d-b34e-8476fa802506",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/easylogging-bench-mt.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/easylogging-bench-mt.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-d987cbcc-bea5-45b4-96df-83249d7af91e",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/spdlog-null-async.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/spdlog-null-async.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-e19ea883-c409-4d87-a0c9-39d1e5873fc4",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/g2log-async.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/g2log-async.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-9ca74cf2-f1a2-4742-9731-3ca4ec7939e9",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/glog-bench-mt.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/glog-bench-mt.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-1bcf9a8a-3f3a-428e-a79d-d4043af2e171",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 2,
                  "endLine": 164,
                  "endColumn": 37,
                  "charOffset": 5022,
                  "charLength": 35,
                  "snippet": {
                    "text": "memcpy (vec_eo, vec_wi, fd_setsize)",
                    "rendered": {
                      "text": "memcpy (vec_eo, vec_wi, fd_setsize)",
                      "markdown": "`memcpy (vec_eo, vec_wi, fd_setsize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5022,
                        "charLength": 35
                      },
                      "insertedContent": {
                        "text": "memcpy_s(vec_eo, <size of vec_eo>,  vec_wi,  fd_setsize)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5921491d-a28e-4093-9c95-346ea0ef2921",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 2,
                  "endLine": 156,
                  "endColumn": 37,
                  "charOffset": 4733,
                  "charLength": 35,
                  "snippet": {
                    "text": "memcpy (vec_wo, vec_wi, fd_setsize)",
                    "rendered": {
                      "text": "memcpy (vec_wo, vec_wi, fd_setsize)",
                      "markdown": "`memcpy (vec_wo, vec_wi, fd_setsize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 4733,
                        "charLength": 35
                      },
                      "insertedContent": {
                        "text": "memcpy_s(vec_wo, <size of vec_wo>,  vec_wi,  fd_setsize)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-9366bf14-b9b0-46cf-b559-5fd2058420bb",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 2,
                  "endLine": 155,
                  "endColumn": 37,
                  "charOffset": 4694,
                  "charLength": 35,
                  "snippet": {
                    "text": "memcpy (vec_ro, vec_ri, fd_setsize)",
                    "rendered": {
                      "text": "memcpy (vec_ro, vec_ri, fd_setsize)",
                      "markdown": "`memcpy (vec_ro, vec_ri, fd_setsize)`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/libev-4.33/ev_select.c"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 4694,
                        "charLength": 35
                      },
                      "insertedContent": {
                        "text": "memcpy_s(vec_ro, <size of vec_ro>,  vec_ri,  fd_setsize)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-176d6f4e-c9ca-49d9-befe-b08432b257d0",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 12,
                  "endLine": 356,
                  "endColumn": 52,
                  "charOffset": 14013,
                  "charLength": 147,
                  "snippet": {
                    "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14013,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_data[num_elem].message, \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE, \n                    event_description_(args->events[e]))"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14013,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_data[num_elem].message, \n                    event_description_(args->events[e]), \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b110f3da-8733-4340-9225-72c5f8a345d2",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/spdlog-async.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/spdlog-async.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-049845b0-c29f-44b6-9686-17c0f58f89b5",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 12,
                  "endLine": 223,
                  "endColumn": 75,
                  "charOffset": 8716,
                  "charLength": 63,
                  "snippet": {
                    "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8716,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  AGA_MAX_EVENT_STR,  event_record.message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8716,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_record.message,  AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-9b3872e0-d697-4db0-9f8d-f50c230debaa",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 8,
                  "endLine": 180,
                  "endColumn": 34,
                  "charOffset": 6823,
                  "charLength": 82,
                  "snippet": {
                    "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6823,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6823,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-7ba0404c-2ef8-4ec6-8d14-d59ecf07ea70",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 8,
                  "endLine": 173,
                  "endColumn": 34,
                  "charOffset": 6525,
                  "charLength": 89,
                  "snippet": {
                    "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6525,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_record.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6525,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_record.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-88e9e5dd-e4be-40d5-9a74-066942cbeee5",
          "kind": "fail",
          "level": "warning",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/third-party/spdlog/bench/spdlog-bench-mt.cpp"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 38,
                  "endLine": 3,
                  "endColumn": 59,
                  "charOffset": 75,
                  "charLength": 21,
                  "snippet": {
                    "text": "http://opensource.org",
                    "rendered": {
                      "text": "http://opensource.org",
                      "markdown": "`http://opensource.org`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "An HTTP-based URL without TLS was detected."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/third-party/spdlog/bench/spdlog-bench-mt.cpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 75,
                        "charLength": 21
                      },
                      "insertedContent": {
                        "text": "https://opensource.org"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Moderate",
            "DevSkimConfidence": "High",
            "tags": [
              "ThreatModel.Integration.HTTP"
            ]
          }
        },
        {
          "ruleId": "glog-65d6dec2-1968-4831-a043-6f4d74358030",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/rocmsmi/rocm_smi_mock_impl.cc"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 4,
                  "endLine": 114,
                  "endColumn": 44,
                  "charOffset": 3084,
                  "charLength": 91,
                  "snippet": {
                    "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/rocm_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3084,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_ntfn_data.message, \n            MAX_EVENT_NOTIFICATION_MSG_SIZE,  \"test event\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/rocmsmi/rocm_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3084,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_ntfn_data.message,  \"test event\", \n            MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f5324127-3ef2-4ee3-a2a9-af9ebe080c98",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/amd_smi_mock_impl.cc"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 4,
                  "endLine": 117,
                  "endColumn": 44,
                  "charOffset": 3537,
                  "charLength": 91,
                  "snippet": {
                    "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_ntfn_data.message, \"test event\",\n            MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/amd_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3537,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_ntfn_data.message, \n            MAX_EVENT_NOTIFICATION_MSG_SIZE,  \"test event\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/amd_smi_mock_impl.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3537,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_ntfn_data.message,  \"test event\", \n            MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5775cdbd-a2e3-4ed3-b216-bf5eff018740",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/include/base.hpp"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 4,
                  "endLine": 189,
                  "endColumn": 60,
                  "charOffset": 6406,
                  "charLength": 56,
                  "snippet": {
                    "text": "memcpy(&key.id[8], &gpu_unique_id, sizeof(gpu_unique_id)",
                    "rendered": {
                      "text": "memcpy(&key.id[8], &gpu_unique_id, sizeof(gpu_unique_id)",
                      "markdown": "`memcpy(&key.id[8], &gpu_unique_id, sizeof(gpu_unique_id)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/include/base.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6406,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&key.id[8], <size of &key.id[8]>,  &gpu_unique_id,  sizeof(gpu_unique_id)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c978cf40-104a-42bd-8a98-7d88a0ab7f7a",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/include/base.hpp"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 4,
                  "endLine": 184,
                  "endColumn": 48,
                  "charOffset": 6220,
                  "charLength": 44,
                  "snippet": {
                    "text": "memcpy(&key.id[0], &host_id, sizeof(host_id)",
                    "rendered": {
                      "text": "memcpy(&key.id[0], &host_id, sizeof(host_id)",
                      "markdown": "`memcpy(&key.id[0], &host_id, sizeof(host_id)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/include/base.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6220,
                        "charLength": 44
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&key.id[0], <size of &key.id[0]>,  &host_id,  sizeof(host_id)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-86fdb64e-6b90-4f9e-bc89-936504a93d67",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 1505,
                  "startColumn": 8,
                  "endLine": 1506,
                  "endColumn": 48,
                  "charOffset": 62561,
                  "charLength": 109,
                  "snippet": {
                    "text": "strcpy(info->peer_device[walk_ctxt->count].peer_device.name,\n               (name + std::to_string(gpu1->id()",
                    "rendered": {
                      "text": "strcpy(info->peer_device[walk_ctxt->count].peer_device.name,\n               (name + std::to_string(gpu1->id()",
                      "markdown": "`strcpy(info->peer_device[walk_ctxt->count].peer_device.name,\n               (name + std::to_string(gpu1->id()`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62561,
                        "charLength": 109
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->peer_device[walk_ctxt->count].peer_device.name, <size of info->peer_device[walk_ctxt->count].peer_device.name>, \n               (name + std::to_string(gpu1->id()"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62561,
                        "charLength": 109
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->peer_device[walk_ctxt->count].peer_device.name, \n               (name + std::to_string(gpu1->id(, <size of info->peer_device[walk_ctxt->count].peer_device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-3eae3521-b2cb-46e8-bd8f-731aaf89f4f0",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 914,
                  "startColumn": 40,
                  "endLine": 915,
                  "endColumn": 64,
                  "charOffset": 36471,
                  "charLength": 72,
                  "snippet": {
                    "text": "malloc(\n            num_bad_pages * sizeof(amdsmi_retired_page_record_t)",
                    "rendered": {
                      "text": "malloc(\n            num_bad_pages * sizeof(amdsmi_retired_page_record_t)",
                      "markdown": "`malloc(\n            num_bad_pages * sizeof(amdsmi_retired_page_record_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 36471,
                        "charLength": 72
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-640d7a2a-3fce-4e36-809d-9ef1f0f4f18d",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 793,
                  "startColumn": 8,
                  "endLine": 794,
                  "endColumn": 32,
                  "charOffset": 31177,
                  "charLength": 91,
                  "snippet": {
                    "text": "strncpy(status->vbios_part_number, vbios_info.part_number,\n                AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_part_number, vbios_info.part_number,\n                AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_part_number, vbios_info.part_number,\n                AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31177,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_part_number, \n                AGA_MAX_STR_LEN,  vbios_info.part_number)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31177,
                        "charLength": 91
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_part_number,  vbios_info.part_number, \n                AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-52633f88-72e0-4245-a8c8-bdbd4ce21cfb",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 792,
                  "startColumn": 8,
                  "endLine": 792,
                  "endColumn": 75,
                  "charOffset": 31100,
                  "charLength": 67,
                  "snippet": {
                    "text": "strncpy(status->vbios_version, vbios_info.version, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_version, vbios_info.version, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_version, vbios_info.version, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31100,
                        "charLength": 67
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_version,  AGA_MAX_STR_LEN,  vbios_info.version)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 31100,
                        "charLength": 67
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_version,  vbios_info.version,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-5817d52a-d4b6-41c7-aa27-d32cf68f7203",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 784,
                  "startColumn": 4,
                  "endLine": 784,
                  "endColumn": 79,
                  "charOffset": 30726,
                  "charLength": 75,
                  "snippet": {
                    "text": "memcpy(status->driver_version, driver_info.driver_version, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->driver_version, driver_info.driver_version, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->driver_version, driver_info.driver_version, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30726,
                        "charLength": 75
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->driver_version, <size of status->driver_version>,  driver_info.driver_version,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-62cc629a-3132-4c71-a856-61865cd79945",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 777,
                  "startColumn": 4,
                  "endLine": 777,
                  "endColumn": 72,
                  "charOffset": 30359,
                  "charLength": 68,
                  "snippet": {
                    "text": "memcpy(status->card_model, board_info.model_number, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->card_model, board_info.model_number, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->card_model, board_info.model_number, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30359,
                        "charLength": 68
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->card_model, <size of status->card_model>,  board_info.model_number,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-dc454438-cdf9-4756-986f-0fae98960a62",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 4,
                  "endLine": 775,
                  "endColumn": 78,
                  "charOffset": 30248,
                  "charLength": 74,
                  "snippet": {
                    "text": "memcpy(status->card_vendor, board_info.manufacturer_name, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->card_vendor, board_info.manufacturer_name, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->card_vendor, board_info.manufacturer_name, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30248,
                        "charLength": 74
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->card_vendor, <size of status->card_vendor>,  board_info.manufacturer_name,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a8ed5c1b-4266-4d81-a481-361da3eeca8a",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 773,
                  "startColumn": 4,
                  "endLine": 773,
                  "endColumn": 73,
                  "charOffset": 30134,
                  "charLength": 69,
                  "snippet": {
                    "text": "memcpy(status->card_series, board_info.product_name, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->card_series, board_info.product_name, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->card_series, board_info.product_name, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30134,
                        "charLength": 69
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->card_series, <size of status->card_series>,  board_info.product_name,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c05bc355-3849-48a7-8bd7-7dde6f978e15",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 771,
                  "startColumn": 4,
                  "endLine": 771,
                  "endColumn": 74,
                  "charOffset": 30026,
                  "charLength": 70,
                  "snippet": {
                    "text": "memcpy(status->serial_num, board_info.product_serial, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "memcpy(status->serial_num, board_info.product_serial, AGA_MAX_STR_LEN)",
                      "markdown": "`memcpy(status->serial_num, board_info.product_serial, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 30026,
                        "charLength": 70
                      },
                      "insertedContent": {
                        "text": "memcpy_s(status->serial_num, <size of status->serial_num>,  board_info.product_serial,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e39c960f-a54e-407c-b45b-f50b7dd5367c",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 41,
                  "endLine": 439,
                  "endColumn": 77,
                  "charOffset": 15804,
                  "charLength": 36,
                  "snippet": {
                    "text": "malloc(sizeof(amdsmi_process_info_t)",
                    "rendered": {
                      "text": "malloc(sizeof(amdsmi_process_info_t)",
                      "markdown": "`malloc(sizeof(amdsmi_process_info_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 15804,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-0f1468c1-35ab-4c24-8739-f7ae98e3a7fa",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 414,
                  "startColumn": 4,
                  "endLine": 414,
                  "endColumn": 40,
                  "charOffset": 14800,
                  "charLength": 36,
                  "snippet": {
                    "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(sku, token, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(sku, token, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14800,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strcpy_s(sku,  AGA_MAX_STR_LEN,  token)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14800,
                        "charLength": 36
                      },
                      "insertedContent": {
                        "text": "strlcpy(sku,  token,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-496d448c-0945-4b94-bddd-b3d3319e4135",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 8,
                  "endLine": 387,
                  "endColumn": 32,
                  "charOffset": 13964,
                  "charLength": 94,
                  "snippet": {
                    "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, std::to_string(version).c_str(),\n                AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13964,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version, \n                AGA_MAX_STR_LEN,  std::to_string(version).c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13964,
                        "charLength": 94
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  std::to_string(version).c_str(), \n                AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b7df63ef-6d21-4969-80e3-a196f3aeaa44",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 8,
                  "endLine": 384,
                  "endColumn": 58,
                  "charOffset": 13891,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13891,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13891,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-de768a8a-65cc-4ffd-891c-bbddd98ff650",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 8,
                  "endLine": 372,
                  "endColumn": 58,
                  "charOffset": 13255,
                  "charLength": 50,
                  "snippet": {
                    "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, buf, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13255,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  buf)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 13255,
                        "charLength": 50
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  buf,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-147f60bd-081a-4530-9e4f-b6dae18c3f22",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 4,
                  "endLine": 364,
                  "endColumn": 70,
                  "charOffset": 12744,
                  "charLength": 66,
                  "snippet": {
                    "text": "strncpy(fw_version->firmware, block_name.c_str(), AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->firmware, block_name.c_str(), AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->firmware, block_name.c_str(), AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 12744,
                        "charLength": 66
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->firmware,  AGA_MAX_STR_LEN,  block_name.c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_api.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 12744,
                        "charLength": 66
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->firmware,  block_name.c_str(),  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-df9fac77-b4e0-44cb-baf4-0439b72788a9",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu.cc"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 4,
                  "endLine": 286,
                  "endColumn": 57,
                  "charOffset": 10500,
                  "charLength": 53,
                  "snippet": {
                    "text": "memcpy(&stats_, stats, sizeof(aga_gpu_watch_fields_t)",
                    "rendered": {
                      "text": "memcpy(&stats_, stats, sizeof(aga_gpu_watch_fields_t)",
                      "markdown": "`memcpy(&stats_, stats, sizeof(aga_gpu_watch_fields_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10500,
                        "charLength": 53
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&stats_, <size of &stats_>,  stats,  sizeof(aga_gpu_watch_fields_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-c76eaa7b-f05d-4f1d-b1da-7b09e423c0e7",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu.cc"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 4,
                  "endLine": 278,
                  "endColumn": 49,
                  "charOffset": 10261,
                  "charLength": 45,
                  "snippet": {
                    "text": "strcpy(info->device.name, device_name.c_str()",
                    "rendered": {
                      "text": "strcpy(info->device.name, device_name.c_str()",
                      "markdown": "`strcpy(info->device.name, device_name.c_str()`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10261,
                        "charLength": 45
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->device.name, <size of info->device.name>,  device_name.c_str()"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10261,
                        "charLength": 45
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->device.name,  device_name.c_str(, <size of info->device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-b7acaee4-e994-4ac2-aeb6-77a0ab05ecc8",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu.cc"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 4,
                  "endLine": 143,
                  "endColumn": 47,
                  "charOffset": 3955,
                  "charLength": 43,
                  "snippet": {
                    "text": "memcpy(spec, &spec_, sizeof(aga_gpu_spec_t)",
                    "rendered": {
                      "text": "memcpy(spec, &spec_, sizeof(aga_gpu_spec_t)",
                      "markdown": "`memcpy(spec, &spec_, sizeof(aga_gpu_spec_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3955,
                        "charLength": 43
                      },
                      "insertedContent": {
                        "text": "memcpy_s(spec, <size of spec>,  &spec_,  sizeof(aga_gpu_spec_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-43bcca44-c279-477c-b032-ee35de40831d",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 8,
                  "endLine": 379,
                  "endColumn": 72,
                  "charOffset": 14301,
                  "charLength": 64,
                  "snippet": {
                    "text": "strncpy(event.message, event_buffer_get_message(event_buffer, i)",
                    "rendered": {
                      "text": "strncpy(event.message, event_buffer_get_message(event_buffer, i)",
                      "markdown": "`strncpy(event.message, event_buffer_get_message(event_buffer, i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14301,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  i,  event_buffer_get_message(event_buffer)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14301,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_buffer_get_message(event_buffer,  i)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-311d9c21-eb37-4f66-9a4a-3c1701222e01",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 12,
                  "endLine": 560,
                  "endColumn": 44,
                  "charOffset": 21277,
                  "charLength": 92,
                  "snippet": {
                    "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                    "rendered": {
                      "text": "strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)",
                      "markdown": "`strcpy(info->peer_device[cnt].peer_device.name,\n                   (name + std::to_string(i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 21277,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strcpy_s(info->peer_device[cnt].peer_device.name, <size of info->peer_device[cnt].peer_device.name>, \n                   (name + std::to_string(i)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strcpy is frequently dangerous, as it will cause a buffer overflow if the source is larger than the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 21277,
                        "charLength": 92
                      },
                      "insertedContent": {
                        "text": "strlcpy(info->peer_device[cnt].peer_device.name, \n                   (name + std::to_string(i, <size of info->peer_device[cnt].peer_device.name>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-2fbdc708-1557-4f39-8b45-92d3c4c23b36",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 263,
                  "startColumn": 8,
                  "endLine": 263,
                  "endColumn": 71,
                  "charOffset": 10260,
                  "charLength": 63,
                  "snippet": {
                    "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10260,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  AGA_MAX_EVENT_STR,  event_record.message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 10260,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_record.message,  AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e3785ee6-5779-4275-aef0-496faf8d3cbe",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 8,
                  "endLine": 372,
                  "endColumn": 79,
                  "charOffset": 14004,
                  "charLength": 71,
                  "snippet": {
                    "text": "strncpy(event_record.message, event_buffer_get_message(event_buffer, i)",
                    "rendered": {
                      "text": "strncpy(event_record.message, event_buffer_get_message(event_buffer, i)",
                      "markdown": "`strncpy(event_record.message, event_buffer_get_message(event_buffer, i)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14004,
                        "charLength": 71
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_record.message,  i,  event_buffer_get_message(event_buffer)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 14004,
                        "charLength": 71
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_record.message,  event_buffer_get_message(event_buffer,  i)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-97c0f161-0847-49f3-9f3b-771e9a623949",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 4,
                  "endLine": 184,
                  "endColumn": 60,
                  "charOffset": 7257,
                  "charLength": 56,
                  "snippet": {
                    "text": "strncpy(status->memory_vendor, \"hynix\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->memory_vendor, \"hynix\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->memory_vendor, \"hynix\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7257,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->memory_vendor,  AGA_MAX_STR_LEN,  \"hynix\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7257,
                        "charLength": 56
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->memory_vendor,  \"hynix\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-52a459e5-1847-4963-919e-b83548df07ea",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 4,
                  "endLine": 187,
                  "endColumn": 77,
                  "charOffset": 7395,
                  "charLength": 73,
                  "snippet": {
                    "text": "strncpy(status->pcie_status.pcie_bus_id, \"0000:59:00.0\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->pcie_status.pcie_bus_id, \"0000:59:00.0\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->pcie_status.pcie_bus_id, \"0000:59:00.0\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7395,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->pcie_status.pcie_bus_id,  AGA_MAX_STR_LEN,  \"0000:59:00.0\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 7395,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->pcie_status.pcie_bus_id,  \"0000:59:00.0\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-3c2b66a9-cdb8-4a62-afb0-a51c222a6c9d",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 4,
                  "endLine": 175,
                  "endColumn": 56,
                  "charOffset": 6723,
                  "charLength": 52,
                  "snippet": {
                    "text": "strncpy(status->card_sku, \"D65205\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->card_sku, \"D65205\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->card_sku, \"D65205\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6723,
                        "charLength": 52
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->card_sku,  AGA_MAX_STR_LEN,  \"D65205\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6723,
                        "charLength": 52
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->card_sku,  \"D65205\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e3136326-dc68-4db2-b62a-018820ae6df1",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 4,
                  "endLine": 173,
                  "endColumn": 77,
                  "charOffset": 6628,
                  "charLength": 73,
                  "snippet": {
                    "text": "strncpy(status->vbios_version, \"022.040.003.041.000001\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_version, \"022.040.003.041.000001\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_version, \"022.040.003.041.000001\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6628,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_version,  AGA_MAX_STR_LEN,  \"022.040.003.041.000001\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6628,
                        "charLength": 73
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_version,  \"022.040.003.041.000001\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e7f3d967-50db-4368-b451-e5d368c1379c",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 4,
                  "endLine": 171,
                  "endColumn": 73,
                  "charOffset": 6523,
                  "charLength": 69,
                  "snippet": {
                    "text": "strncpy(status->vbios_part_number, \"113-D65205-107\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->vbios_part_number, \"113-D65205-107\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->vbios_part_number, \"113-D65205-107\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6523,
                        "charLength": 69
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->vbios_part_number,  AGA_MAX_STR_LEN,  \"113-D65205-107\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6523,
                        "charLength": 69
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->vbios_part_number,  \"113-D65205-107\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a0dd25cc-e932-433d-ac19-acecf173c8bd",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 4,
                  "endLine": 169,
                  "endColumn": 61,
                  "charOffset": 6426,
                  "charLength": 57,
                  "snippet": {
                    "text": "strncpy(status->driver_version, \"6.3.6\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->driver_version, \"6.3.6\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->driver_version, \"6.3.6\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6426,
                        "charLength": 57
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->driver_version,  AGA_MAX_STR_LEN,  \"6.3.6\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6426,
                        "charLength": 57
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->driver_version,  \"6.3.6\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e6377837-d0d8-493e-9838-b63122fc7a8a",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 4,
                  "endLine": 164,
                  "endColumn": 58,
                  "charOffset": 6191,
                  "charLength": 54,
                  "snippet": {
                    "text": "strncpy(status->card_model, \"0x0b0c\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->card_model, \"0x0b0c\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->card_model, \"0x0b0c\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6191,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->card_model,  AGA_MAX_STR_LEN,  \"0x0b0c\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6191,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->card_model,  \"0x0b0c\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-16ccb2c6-e204-463a-b8f9-904bcac27218",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 4,
                  "endLine": 162,
                  "endColumn": 28,
                  "charOffset": 6053,
                  "charLength": 101,
                  "snippet": {
                    "text": "strncpy(status->card_series, \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\",\n            AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->card_series, \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\",\n            AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->card_series, \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\",\n            AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6053,
                        "charLength": 101
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->card_series, \n            AGA_MAX_STR_LEN,  \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 6053,
                        "charLength": 101
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->card_series,  \"AMD INSTINCT MI200 (MCM) OAM AC MBA MSFT\", \n            AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-e59c24d6-2129-4baf-8064-44cb02312697",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 4,
                  "endLine": 159,
                  "endColumn": 66,
                  "charOffset": 5953,
                  "charLength": 62,
                  "snippet": {
                    "text": "strncpy(status->serial_num, \"PCB046982-0071\", AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(status->serial_num, \"PCB046982-0071\", AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(status->serial_num, \"PCB046982-0071\", AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5953,
                        "charLength": 62
                      },
                      "insertedContent": {
                        "text": "strcpy_s(status->serial_num,  AGA_MAX_STR_LEN,  \"PCB046982-0071\")"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5953,
                        "charLength": 62
                      },
                      "insertedContent": {
                        "text": "strlcpy(status->serial_num,  \"PCB046982-0071\",  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-13898cdb-9917-43e3-ba65-61ce83c61888",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 4,
                  "endLine": 109,
                  "endColumn": 58,
                  "charOffset": 3988,
                  "charLength": 54,
                  "snippet": {
                    "text": "strncpy(fw_version->version, version, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->version, version, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->version, version, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3988,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->version,  AGA_MAX_STR_LEN,  version)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3988,
                        "charLength": 54
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->version,  version,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-607fb665-4ee6-4a56-85c6-ae5bdaa5b407",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 4,
                  "endLine": 108,
                  "endColumn": 57,
                  "charOffset": 3929,
                  "charLength": 53,
                  "snippet": {
                    "text": "strncpy(fw_version->firmware, block, AGA_MAX_STR_LEN)",
                    "rendered": {
                      "text": "strncpy(fw_version->firmware, block, AGA_MAX_STR_LEN)",
                      "markdown": "`strncpy(fw_version->firmware, block, AGA_MAX_STR_LEN)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3929,
                        "charLength": 53
                      },
                      "insertedContent": {
                        "text": "strcpy_s(fw_version->firmware,  AGA_MAX_STR_LEN,  block)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/smi_api_mock.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3929,
                        "charLength": 53
                      },
                      "insertedContent": {
                        "text": "strlcpy(fw_version->firmware,  block,  AGA_MAX_STR_LEN)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-d5643bee-fb47-4d54-9efb-dda4a005956b",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/svc/utils.hpp"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 4,
                  "endLine": 61,
                  "endColumn": 37,
                  "charOffset": 1879,
                  "charLength": 76,
                  "snippet": {
                    "text": "memcpy(api_spec->id, proto_key.data(),\n           SDK_MIN(proto_key.length()",
                    "rendered": {
                      "text": "memcpy(api_spec->id, proto_key.data(),\n           SDK_MIN(proto_key.length()",
                      "markdown": "`memcpy(api_spec->id, proto_key.data(),\n           SDK_MIN(proto_key.length()`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/utils.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 1879,
                        "charLength": 76
                      },
                      "insertedContent": {
                        "text": "memcpy_s(api_spec->id, <size of api_spec->id>,  proto_key.data(), \n           SDK_MIN(proto_key.length()"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-36b71c53-25f8-470e-98be-c93069da982c",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1412,
                  "startColumn": 12,
                  "endLine": 1414,
                  "endColumn": 52,
                  "charOffset": 62817,
                  "charLength": 147,
                  "snippet": {
                    "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                    "rendered": {
                      "text": "strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)",
                      "markdown": "`strncpy(event_data[num_elem].message,\n                    event_description_(args->events[e]),\n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62817,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_data[num_elem].message, \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE, \n                    event_description_(args->events[e]))"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 62817,
                        "charLength": 147
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_data[num_elem].message, \n                    event_description_(args->events[e]), \n                    MAX_EVENT_NOTIFICATION_MSG_SIZE)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-bc11c550-d8b5-41a6-90b9-d9c3f5ac9468",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1277,
                  "startColumn": 12,
                  "endLine": 1277,
                  "endColumn": 75,
                  "charOffset": 57372,
                  "charLength": 63,
                  "snippet": {
                    "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_record.message, AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 57372,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message,  AGA_MAX_EVENT_STR,  event_record.message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 57372,
                        "charLength": 63
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_record.message,  AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-4f8e21b0-a75b-43d2-929f-985f0f35e32c",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1229,
                  "startColumn": 8,
                  "endLine": 1230,
                  "endColumn": 34,
                  "charOffset": 55389,
                  "charLength": 82,
                  "snippet": {
                    "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55389,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55389,
                        "charLength": 82
                      },
                      "insertedContent": {
                        "text": "strlcpy(event.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-ece6e129-6dae-46c8-ac1a-ef817f4b7b00",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                },
                "region": {
                  "startLine": 1222,
                  "startColumn": 8,
                  "endLine": 1223,
                  "endColumn": 34,
                  "charOffset": 55110,
                  "charLength": 89,
                  "snippet": {
                    "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                    "rendered": {
                      "text": "strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)",
                      "markdown": "`strncpy(event_record.message, event_buffer[i].message,\n                AGA_MAX_EVENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55110,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strcpy_s(event_record.message, \n                AGA_MAX_EVENT_STR,  event_buffer[i].message)"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/smi/amdsmi/smi_state.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 55110,
                        "charLength": 89
                      },
                      "insertedContent": {
                        "text": "strlcpy(event_record.message,  event_buffer[i].message, \n                AGA_MAX_EVENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f0c4f7d6-07c9-4490-b080-556f0c5e89bb",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/svc/events_svc.hpp"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 4,
                  "endLine": 247,
                  "endColumn": 68,
                  "charOffset": 8094,
                  "charLength": 64,
                  "snippet": {
                    "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_CLIENT_STR)",
                    "rendered": {
                      "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_CLIENT_STR)",
                      "markdown": "`strncpy(req.client, context->peer().c_str(), AGA_MAX_CLIENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/events_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8094,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strcpy_s(req.client,  AGA_MAX_CLIENT_STR,  context->peer().c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/events_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 8094,
                        "charLength": 64
                      },
                      "insertedContent": {
                        "text": "strlcpy(req.client,  context->peer().c_str(),  AGA_MAX_CLIENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        },
        {
          "ruleId": "glog-8207c676-c5dc-4103-b653-779088e214ce",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 4,
                  "endLine": 125,
                  "endColumn": 53,
                  "charOffset": 3334,
                  "charLength": 49,
                  "snippet": {
                    "text": "memcpy(spec, &spec_, sizeof(aga_gpu_watch_spec_t)",
                    "rendered": {
                      "text": "memcpy(spec, &spec_, sizeof(aga_gpu_watch_spec_t)",
                      "markdown": "`memcpy(spec, &spec_, sizeof(aga_gpu_watch_spec_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 3334,
                        "charLength": 49
                      },
                      "insertedContent": {
                        "text": "memcpy_s(spec, <size of spec>,  &spec_,  sizeof(aga_gpu_watch_spec_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-a905f2e6-3cff-4871-a997-f4af37b4a46f",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 4,
                  "endLine": 96,
                  "endColumn": 53,
                  "charOffset": 2498,
                  "charLength": 49,
                  "snippet": {
                    "text": "memcpy(&spec_, spec, sizeof(aga_gpu_watch_spec_t)",
                    "rendered": {
                      "text": "memcpy(&spec_, spec, sizeof(aga_gpu_watch_spec_t)",
                      "markdown": "`memcpy(&spec_, spec, sizeof(aga_gpu_watch_spec_t)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "There are a number of conditions in which memcpy can introduce a vulnerability (mismatched buffer sizes, null pointers, etc.). More secure alternitives perform additional validation of the source and destination buffer"
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/api/gpu_watch.cc"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 2498,
                        "charLength": 49
                      },
                      "insertedContent": {
                        "text": "memcpy_s(&spec_, <size of &spec_>,  spec,  sizeof(aga_gpu_watch_spec_t)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-f4152590-de8b-4040-a371-dd6035e5dc17",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/main.cc"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 13,
                  "endLine": 116,
                  "endColumn": 22,
                  "charOffset": 3485,
                  "charLength": 9,
                  "snippet": {
                    "text": "127.0.0.1",
                    "rendered": {
                      "text": "127.0.0.1",
                      "markdown": "`127.0.0.1`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "properties": {
            "DevSkimSeverity": "ManualReview",
            "DevSkimConfidence": "High",
            "tags": [
              "Hygiene.Network.AccessingLocalhost"
            ]
          }
        },
        {
          "ruleId": "glog-1399142f-c747-4f0b-a453-dd36870c47b5",
          "kind": "fail",
          "level": "note",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/sdk/include/sdk/mem.hpp"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 11,
                  "endLine": 163,
                  "endColumn": 23,
                  "charOffset": 5196,
                  "charLength": 12,
                  "snippet": {
                    "text": "malloc(size)",
                    "rendered": {
                      "text": "malloc(size)",
                      "markdown": "`malloc(size)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "If the value provided to malloc is the result of unsafe integer math, it can result in an exploitable condition. "
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/sdk/include/sdk/mem.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5196,
                        "charLength": 12
                      },
                      "insertedContent": {
                        "text": "calloc(<number of elements>, <size of each element>)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "BestPractice",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.ProblematicFunction"
            ]
          }
        },
        {
          "ruleId": "glog-9c38b25c-8694-4a92-b198-855ff0603118",
          "kind": "fail",
          "level": "error",
          "message": {},
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "sw/nic/gpuagent/svc/gpu_watch_svc.hpp"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 4,
                  "endLine": 172,
                  "endColumn": 78,
                  "charOffset": 5896,
                  "charLength": 74,
                  "snippet": {
                    "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_GPU_WATCH_CLIENT_STR)",
                    "rendered": {
                      "text": "strncpy(req.client, context->peer().c_str(), AGA_MAX_GPU_WATCH_CLIENT_STR)",
                      "markdown": "`strncpy(req.client, context->peer().c_str(), AGA_MAX_GPU_WATCH_CLIENT_STR)`"
                    }
                  },
                  "sourceLanguage": "cpp"
                }
              }
            }
          ],
          "fixes": [
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/gpu_watch_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5896,
                        "charLength": 74
                      },
                      "insertedContent": {
                        "text": "strcpy_s(req.client,  AGA_MAX_GPU_WATCH_CLIENT_STR,  context->peer().c_str())"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "description": {
                "text": "strncpy is dangerous, as if the source contains 'n' or more characters, it will not null terminate the destination."
              },
              "artifactChanges": [
                {
                  "artifactLocation": {
                    "uri": "sw/nic/gpuagent/svc/gpu_watch_svc.hpp"
                  },
                  "replacements": [
                    {
                      "deletedRegion": {
                        "charOffset": 5896,
                        "charLength": 74
                      },
                      "insertedContent": {
                        "text": "strlcpy(req.client,  context->peer().c_str(),  AGA_MAX_GPU_WATCH_CLIENT_STR)"
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "DevSkimSeverity": "Important",
            "DevSkimConfidence": "High",
            "tags": [
              "API.DangerousAPI.BannedFunction"
            ]
          }
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}